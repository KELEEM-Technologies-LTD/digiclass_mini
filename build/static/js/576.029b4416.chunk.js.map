{"version":3,"file":"static/js/576.029b4416.chunk.js","mappings":"kUAOe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BC,EAAKH,EAALG,MAAOC,EAAMJ,EAANI,OACfC,GAA0BC,EAAAA,EAAAA,UAAiB,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAkB,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,GAAFD,EAAA,GAAYA,EAAA,IAEH,SAAAE,IAatB,OAbsBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAvB,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEmB,OADXP,EAAOQ,EAAAA,EAAAA,mBACbd,GAAW,GAAMW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQE,EAAAA,EAAAA,IACrBC,EAAAA,EAAAA,YAAgB,IAAAC,OAAW,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,UAC7B,KAAD,EAFKV,EAAQG,EAAAQ,KAGRV,EAAc,QAAXF,EAAGC,EAAIY,YAAI,IAAAb,OAAA,EAARA,EAAUc,QACtBxB,EAASY,GACTT,GAAW,GAAOW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAElBY,QAAQC,IAAGb,EAAAW,IAAQ,yBAAAX,EAAAc,OAAA,GAAApB,EAAA,oBAEtBqB,MAAA,KAAAC,UAAA,CAMD,OAJAC,EAAAA,EAAAA,YAAU,YAjB6C,WAEhC3B,EAAAyB,MAAC,KAADC,UAAA,CAgBrBE,EACF,GAAG,KAGDC,EAAAA,EAAAA,MAAA,OACEC,QAAS,kBAAM9C,EAAS,aAADgC,OAAc1B,GAAS,EAC9CyC,UAAU,0BACVC,MAAO,CAAEC,OAAQ,WAAYC,SAAA,EAE7BC,EAAAA,EAAAA,KAAA,OACEC,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,YAAa,IACbC,OAAO,eAEPR,MAAO,CACLS,OAAQ,OACRC,MAAO,OACPC,YAAa,OACbC,MAAO,QACPV,UAEFC,EAAAA,EAAAA,KAAA,QACEU,cAAc,QACdC,eAAe,QACfC,EAAE,kWAGNZ,EAAAA,EAAAA,KAAA,QACEH,MAAO,CAAEgB,SAAU,OAAQC,WAAiB,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAO6D,eAC9CnB,UAAU,kFAAiFG,SAE1FvC,MAIT,C,cC9De,SAASwD,KACLlE,EAAAA,EAAAA,MAAjB,IACAC,GAA4CC,EAAAA,EAAAA,YAAWC,EAAAA,GAAhCgE,GAAVlE,EAALG,MAAaH,EAANI,OAAwBJ,EAAhBkE,kBAEvB,OACEjB,EAAAA,EAAAA,KAAA,OAEEL,QAAS,kBAAMsB,GAAkB,EACjCrB,UAAU,yBACVC,MAAO,CAAEC,OAAQ,WAAYC,UAE7BC,EAAAA,EAAAA,KAAA,OACEC,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,YAAa,IACbC,OAAO,eACPR,MAAO,CACLS,OAAQ,OACRC,MAAO,OACPC,YAAa,OACbC,MAAO,QACPV,UAEFC,EAAAA,EAAAA,KAAA,QACEU,cAAc,QACdC,eAAe,QACfC,EAAE,yNAWZ,C,cCpCe,SAASM,EAAmBC,GACzC,IAAApE,GAAgDC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnDmE,EAAIrE,EAAJqE,KAAMC,EAAMtE,EAANsE,OAAQJ,EAAgBlE,EAAhBkE,iBAAkBK,EAAGvE,EAAHuE,IACxClE,GAA0CC,EAAAA,EAAAA,UAAc,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDmE,EAAajE,EAAA,GAAEkE,EAAgBlE,EAAA,GAOtC,OALAkC,EAAAA,EAAAA,YAAU,WACRgC,EAAiB,GAAD3C,QAAA4C,EAAAA,EAAAA,GAAKL,IAAIK,EAAAA,EAAAA,GAAKJ,IAEhC,GAAG,CAACD,EAAMC,KAGR3B,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACgB,EAAiB,IACjBM,GACCtB,EAAAA,EAAAA,KAAA,OACEJ,UAAU,uHACV8B,GAAG,eAIH3B,UAEAL,EAAAA,EAAAA,MAAA,OACEE,UAAU,sEACVC,MAAO,CACL8B,eAAgB,OAChBC,eAAgB,eAChB7B,SAAA,EAEFL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oCAAmCG,SAAA,EAChDC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,gDAA+CG,SAAC,mBAG7DC,EAAAA,EAAAA,KAAA,OACEJ,UAAU,iBACVD,QAAS,kBAAMsB,GAAkB,EAAClB,UAElCL,EAAAA,EAAAA,MAAA,OACEa,MAAO,GACPD,OAAQ,GACRH,QAAQ,YACRD,KAAK,OACLD,MAAM,6BAA4BF,SAAA,EAElCC,EAAAA,EAAAA,KAAA,QACEY,EAAE,aACFP,OAAO,UACPD,YAAY,OACZM,cAAc,QACdC,eAAe,WAEjBX,EAAAA,EAAAA,KAAA,QACEY,EAAE,aACFP,OAAO,UACPD,YAAY,OACZM,cAAc,QACdC,eAAe,kBAMtBY,EAAcM,KAAI,SAACC,EAAWC,GAAS,OACtCrC,EAAAA,EAAAA,MAAA,OAEEE,UAAU,qDAAoDG,SAAA,EAE9DC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,+EAA8EG,UAC3FC,EAAAA,EAAAA,KAAA,OACEO,MAAO,GACPD,OAAQ,GACRH,QAAQ,YACRD,KAAK,OACLD,MAAM,6BAA4BF,UAElCC,EAAAA,EAAAA,KAAA,QACEY,EAAE,mXACFV,KAAK,iBAIXR,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMG,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,uBAAsBG,SAAE+B,EAAKE,WAC1ChC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,4CAA2CG,UAErDkC,EAAAA,EAAAA,IAAcH,EAAKI,aArBnBH,EAwBD,KAERrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oCAAmCG,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,YACdI,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qEAAoEG,SAAC,0BAGlFC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,mBAIlB,OAGV,CC9Fe,SAASuC,IAAU,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAC/BzF,GAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BC,EAAKH,EAALG,MAAOC,EAAMJ,EAANI,OACTN,GAAWC,EAAAA,EAAAA,MACXoB,EAAYQ,EAAAA,EAAAA,mBAClBtB,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCqF,EAAInF,EAAA,GAAEoF,EAAOpF,EAAA,GAEdqF,EAAQ,CACZ,CACEC,KAAK,aACLC,IAAI,eAADhE,OAAiB1B,IAEtB,CACEyF,KAAK,WACLC,IAAI,aAADhE,OAAe1B,IAEpB,CACEyF,KAAK,UACLC,IAAI,YAADhE,OAAc1B,EAAM,WAMzB,CACEyF,KAAK,eACLC,IAAI,YAADhE,OAAc1B,EAAM,YAI3B,OACEuC,EAAAA,EAAAA,MAAAoD,EAAAA,SAAA,CAAA/C,SAAA,EACEC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,CAACC,GAAG,QAAOjD,UAChBL,EAAAA,EAAAA,MAACuD,EAAAA,EAAS,CAAAlD,SAAA,EAeRC,EAAAA,EAAAA,KAAA,OACEJ,UAAU,2BACVD,QAAS,kBACP9C,EAAS,SAADgC,OAAUX,EAAOA,EAAKgF,aAAe/F,GAAS,EACvD4C,UAEDC,EAAAA,EAAAA,KAAA,OACEmD,IAAe,QAAZf,EAAO,OAALlF,QAAK,IAALA,OAAK,EAALA,EAAOkG,WAAG,IAAAhB,EAAAA,EAAA,YACfiB,IAAI,OACJzD,UAAU,qBAGdF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,SAAQG,SAAA,EACrBC,EAAAA,EAAAA,KAAA,QACEH,MAAO,CACLY,MAAY,OAALvD,QAAK,IAALA,OAAK,EAALA,EAAO6D,cACduC,WAAY,SACZ9C,YAAa,OACb+C,UAAW,QACXxD,SAEI,OAAL7C,QAAK,IAALA,OAAK,EAALA,EAAO0F,QAEVlD,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCG,SAAA,EAEpDC,EAAAA,EAAAA,KAACpD,EAAY,KAEboD,EAAAA,EAAAA,KAACkB,EAAkB,QAErBxB,EAAAA,EAAAA,MAAC8D,EAAAA,EAAM,CAAC7D,QAAS,kBAAM+C,GAAQ,EAAK,EAAE7C,MAAO,CAAEC,OAAQ,WAAYC,SAAA,CACnC,QADmCsC,EAChE3D,EAAAA,EAAAA,0BAA6B,IAAA2D,GAAY,QAAZC,EAA7BD,EAA+BoB,kBAAU,IAAAnB,OAAZ,EAA7BA,EAA4C,GACf,QADiBC,EAC9C7D,EAAAA,EAAAA,0BAA6B,IAAA6D,GAAW,QAAXC,EAA7BD,EAA+BmB,iBAAS,IAAAlB,OAAX,EAA7BA,EAA2C,eAKpDxC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAAA,KAAe,CAACC,KAAMnB,EAAMoB,GAAIC,EAAAA,SAAS/D,UACxCL,EAAAA,EAAAA,MAACqE,EAAAA,EAAM,CAACF,GAAG,MAAMjE,UAAU,gBAAgBoE,QAAStB,EAAQ3C,SAAA,EAC1DC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAAA,MAAgB,CACfE,GAAIC,EAAAA,SACJG,MAAM,mCACNC,UAAU,0BACVC,QAAQ,4BACRC,MAAM,kCACNC,UAAU,4BACVC,QAAQ,0BAAyBvE,UAEjCC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,wCAGjBI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,gCAA+BG,UAC5CC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,mCAAkCG,UAC/CC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oEAAmEG,UAChFC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAAA,MAAgB,CACfE,GAAIC,EAAAA,SACJG,MAAM,mCACNC,UAAU,0BACVC,QAAQ,4BACRC,MAAM,kCACNC,UAAU,4BACVC,QAAQ,0BAAyBvE,UAEjCC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,MAAY,CAACnE,UAAU,kDAAiDG,UACvEC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,iEAAgEG,UAC7EC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,2CAA0CG,UACvDC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,OAAMG,UACnBL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kDAAiDG,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,YAAWG,UACxBC,EAAAA,EAAAA,KAAA,MAAAD,SACG4C,EAAMd,KAAI,SAAC0C,EAAIC,GACd,OACE9E,EAAAA,EAAAA,MAACoE,EAAAA,SAAQ,CAAA/D,SAAA,EACPC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,OAAMG,UAClBC,EAAAA,EAAAA,KAACyE,EAAAA,GAAI,CACHC,GAAM,OAAFH,QAAE,IAAFA,OAAE,EAAFA,EAAI1B,IACRjD,UAAS,8BAAAf,OAAqC,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO6D,cAAa,kBAAAlC,OAAsB,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO6D,cAAa,KAAIhB,SAErGwE,EAAG3B,SAGD,IAAN4B,GACCxE,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,4CACZ,OAXS4E,EAcnB,SAGJxE,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,6CAEdF,EAAAA,EAAAA,MAAA,UACEE,UAAU,4BACVD,QAAS,WACPjB,EAAAA,EAAAA,eACAiG,OAAOC,SAASC,KAAI,YAAAhG,OAAe1B,EACrC,EAAE4C,SAAA,EAEFC,EAAAA,EAAAA,KAAC8E,EAAAA,EAAU,CACTjF,MAAO,CAAEY,MAAY,OAALvD,QAAK,IAALA,OAAK,EAALA,EAAO6D,kBAEzBf,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wCAejC,C,0PCtKe,SAASgF,IACtB,IAAQ7H,GAAUF,EAAAA,EAAAA,YAAWC,EAAAA,GAArBC,MACF8H,EAAc,IAAIC,KAMlBC,EALsB,IAAID,KAC9BD,EAAYG,cAAgB,GAC5BH,EAAYI,WACZJ,EAAYK,WAGXC,cACAC,MAAM,KAAK,GAEdnI,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCoI,EAAKlI,EAAA,GAAEmI,EAAQnI,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCgI,EAAK/H,EAAA,GAAEgI,EAAQhI,EAAA,GACtBiI,GAA0BvI,EAAAA,EAAAA,UAAS,IAAGwI,GAAAtI,EAAAA,EAAAA,GAAAqI,EAAA,GAA/BE,EAAOD,EAAA,GAAEE,EAAMF,EAAA,GACtBG,GAAsB3I,EAAAA,EAAAA,UAAiB,IAAG4I,GAAA1I,EAAAA,EAAAA,GAAAyI,EAAA,GAAnCE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAA0B/I,EAAAA,EAAAA,UAAiB,IAAGgJ,GAAA9I,EAAAA,EAAAA,GAAA6I,EAAA,GAAvCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BnJ,EAAAA,EAAAA,WAAS,GAAMoJ,GAAAlJ,EAAAA,EAAAA,GAAAiJ,EAAA,GAAtCE,EAAOD,EAAA,GAAE7I,EAAU6I,EAAA,GAOJ,SAAAE,IAoBrB,OApBqBA,GAAA7I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAtB,SAAA4I,IAAA,IAAAC,EAAA3I,EAAA4I,EAAAC,EAAAC,EAAA,OAAAjJ,EAAAA,EAAAA,KAAAO,MAAA,SAAA2I,GAAA,cAAAA,EAAAzI,KAAAyI,EAAAxI,MAAA,OAGmD,OAFjDb,GAAW,GAAMqJ,EAAAzI,KAAA,EAETN,EAAYQ,EAAAA,EAAAA,mBAA6BuI,EAAAxI,KAAA,EACxBE,EAAAA,EAAAA,IAAgBC,EAAAA,EAAAA,QAAY,IAAAC,OAAOX,EAAKY,UAAW,KAAD,EAElE,QAFDgI,EAAQG,EAAAlI,YAEP,IAAH+H,GAAS,QAAND,EAAHC,EAAK9H,YAAI,IAAA6H,GAATA,EAAW7H,OACPgI,EAAU,OAAHF,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAK9H,YAAI,IAAA+H,OAAN,EAAHA,EAAW/H,KACxByG,EAASuB,EAAKvD,YAAc,IAC5BkC,EAASqB,EAAKtD,WAAa,IAC3B6C,GAAa,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAME,SAAU,IACzBf,GAAW,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMpC,WAAY,IACzBmB,GAAW,OAAJiB,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAO,eAGtBvJ,GAAW,GAAOqJ,EAAAxI,KAAA,iBAAAwI,EAAAzI,KAAA,GAAAyI,EAAA/H,GAAA+H,EAAA,SAElBrJ,GAAW,GACXuB,QAAQC,IAAG6H,EAAA/H,IAAQ,yBAAA+H,EAAA5H,OAAA,GAAAuH,EAAA,oBAEtBtH,MAAA,KAAAC,UAAA,EAxBDC,EAAAA,EAAAA,YAAU,YAEH,WAEemH,EAAArH,MAAC,KAADC,UAAA,CAHpB6H,EACF,GAAG,IAwBH,IAAMC,EAAW,eAAAC,GAAAxJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAgB,EAAAsI,EAAArJ,EAAAsJ,EAAAC,EAAAC,EAAAC,EAAAb,EAAAE,EAAA,OAAAjJ,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACdyH,EAAI0B,OAAS,GAAC,CAAArJ,EAAAE,KAAA,QAC8B,OAA9CoJ,EAAAA,EAAAA,GAAe,+BAA+BtJ,EAAAuJ,OAAA,qBAErCxB,IAAS,gBAAgByB,KAAKzB,GAAM,CAAA/H,EAAAE,KAAA,QACI,OAAjDoJ,EAAAA,EAAAA,GAAe,kCAAkCtJ,EAAAuJ,OAAA,iBAcF,OAX3C7I,EAAe,CACnBwE,WAAY+B,EACZ9B,UAAWgC,GAGTI,IAAS7G,EAAQkI,IAAMrB,GACvBQ,IAAOrH,EAAQiI,OAASZ,GACxBJ,IAAKjH,EAAQ2F,SAAWsB,GAAI3H,EAAAC,KAAA,GAG9BZ,GAAW,GACLM,EAAYQ,EAAAA,EAAAA,mBAA6BH,EAAAE,KAAA,GAEnBE,EAAAA,EAAAA,IAC1BC,EAAAA,EAAAA,cAAkB,IAAAC,OAAOX,EAAKY,SAC9BG,GACA,KAAD,GAHkB,GAKP,QALNuI,EAAajJ,EAAAQ,YAKP,IAARyI,GAAc,QAAND,EAARC,EAAUxI,YAAI,IAAAuI,IAAdA,EAAgBvI,KAAI,CAAAT,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACCE,EAAAA,EAAAA,IACrBC,EAAAA,EAAAA,QAAY,IAAAC,OAAOX,EAAKY,UACxB,KAAD,GAFKgI,EAAQvI,EAAAQ,KAGRiI,EAAU,OAAHF,QAAG,IAAHA,GAAS,QAANW,EAAHX,EAAK9H,YAAI,IAAAyI,OAAN,EAAHA,EAAWzI,KAExByG,EAASuB,EAAKvD,YAAc,IAC5BkC,EAASqB,EAAKtD,WAAa,IAC3B6C,GAAa,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAME,SAAU,IACzBf,GAAW,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMpC,WAAY,IACzBmB,GAAW,OAAJiB,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAO,eAEpBa,EAAAA,EAAAA,IAAuB,OAARR,QAAQ,IAARA,GAAc,QAANE,EAARF,EAAUxI,YAAI,IAAA0I,GAAM,QAANC,EAAdD,EAAgB1I,YAAI,IAAA2I,OAAZ,EAARA,EAAsB3F,SAAS,WAC5C,IAAMiG,EAAevJ,EAAAA,EAAAA,mBACrBuJ,EAAQxE,WAAa+B,EACrByC,EAAQvE,UAAYgC,EACpBuC,EAAQd,IAAMrB,EACdmC,EAAQrD,SAAWsB,EACnB+B,EAAQf,OAASZ,EACjB5H,EAAAA,EAAAA,aAAwBuJ,EAC1B,IACA,QAEFrK,GAAW,GAAOW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,UAElBX,GAAW,GACX,yBAAAW,EAAAc,OAAA,GAAApB,EAAA,oBAEH,kBAtDgB,OAAAqJ,EAAAhI,MAAA,KAAAC,UAAA,KAwEjB,OAAOmH,GACL1G,EAAAA,EAAAA,KAACkI,EAAAA,EAAc,CACbC,GAAI,CACF,2BAA4B,CAAEC,gBAAsB,OAALlL,QAAK,IAALA,OAAK,EAALA,EAAO6D,mBAI1Df,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CAACrD,UAAU,OAAMG,UACzBC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oBAAmBG,UAChCL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0EAAyEG,SAAA,EACtFL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,GAAEG,SAAA,EACfC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBACHC,EAAAA,EAAAA,KAAA,SACEqI,YAAY,aACZC,KAAK,OACL1F,KAAK,QACL2F,MAAO/C,EACPgD,SAAU,SAACC,GAAM,OAAKhD,EAASgD,EAAEC,OAAOH,MAAM,EAC9C3I,UAAU,iHAGdF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,GAAEG,SAAA,EACfC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACHC,EAAAA,EAAAA,KAAA,SACEqI,YAAY,YACZC,KAAK,OACL1F,KAAK,WACL2F,MAAO7C,EACP8C,SAAU,SAACC,GAAM,OAAK9C,EAAS8C,EAAEC,OAAOH,MAAM,EAC9C3I,UAAU,iHAGdF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,GAAEG,SAAA,EACfC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHC,EAAAA,EAAAA,KAAA,SACEqI,YAAY,eACZC,KAAK,MACL1F,KAAK,QACL2F,MAAOjC,EACPkC,SAvDoB,SAACG,GAC/B,IAAIC,EAAcD,EAAMD,OAAOH,MAC3BK,EAAYhB,QAAU,MAGxBgB,EAAcA,EAAYC,QAAQ,MAAO,KAGzBC,WAAW,OACzBF,EAAc,OAASA,EAAYG,UAAU,IAG/CxC,EAASqC,GAEb,EA0CYhJ,UAAU,iHAGdF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,GAAEG,SAAA,EACfC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHC,EAAAA,EAAAA,KAAA,SACEqI,YAAY,WACZC,KAAK,OACL1F,KAAK,MACL2F,MAAOrC,EACPsC,SAAU,SAACC,GAAM,OAAKtC,EAAOsC,EAAEC,OAAOH,MAAM,EAC5C3I,UAAU,iHAGdF,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBACHC,EAAAA,EAAAA,KAAA,SACEqI,YAAY,WACZC,KAAK,OACL1F,KAAK,UACL2F,MAAOzC,EACPkD,IAAK9D,EACLsD,SAAU,SAACC,GAAM,OAAK1C,EAAO0C,EAAEC,OAAOH,MAAM,EAC5C3I,UAAU,iHAIdI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,aAAYG,UACzBC,EAAAA,EAAAA,KAAA,UACEL,QAAS0H,EACTzH,UAAS,aAAAf,OAAoB,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO6D,cAAa,kBAAAlC,OAAsB,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO+L,gBAAe,wDAAApK,OAA4D,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO6D,cAAa,qCAC9JhB,SAEC2G,GAAU1G,EAAAA,EAAAA,KAACkJ,EAAAA,EAAgB,CAACC,KAAM,KAAS,yBAO1D,C,qDCvMe,SAASC,IACtB,IAAArM,GAAgCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnCmE,EAAIrE,EAAJqE,KAAMC,EAAMtE,EAANsE,OAAQnE,EAAKH,EAALG,MAStB,OARAsC,EAAAA,EAAAA,YAAU,WACR,IAAM6J,EAAO,CACXjI,KAAMA,EACNC,OAAQA,GAEVlC,QAAQC,IAAIiK,EACd,GAAG,KAGD3J,EAAAA,EAAAA,MAACuD,EAAAA,EAAS,CAAAlD,SAAA,EACRC,EAAAA,EAAAA,KAACsJ,EAAAA,EAAG,CAAAvJ,UACFC,EAAAA,EAAAA,KAACuJ,EAAAA,EAAG,CAACC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAI3J,SAC7BsB,EAAOQ,KAAI,SAAC0C,EAASC,GAAS,OAC7BxE,EAAAA,EAAAA,KAAC2J,EAAgB,CAASC,MAAOrF,EAAIrH,MAAOA,EAAOkE,MAAM,GAAlCoD,EAA2C,SAIxExE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAG,CAAAvJ,UACFC,EAAAA,EAAAA,KAACuJ,EAAAA,EAAG,CAACC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAI3J,SAC7BqB,EAAKS,KAAI,SAAC0C,EAASC,GAAS,OAC3BxE,EAAAA,EAAAA,KAAC2J,EAAgB,CAASC,MAAOrF,EAAIrH,MAAOA,EAAOkE,MAAM,GAAlCoD,EAA0C,UAM7E,CAEA,SAASmF,EAAiBxI,GACxB,IAAQyI,EAAuBzI,EAAvByI,MAAO1M,EAAgBiE,EAAhBjE,MAAOkE,EAASD,EAATC,KACdyI,EAA2BD,EAA3BC,QAAS7H,EAAkB4H,EAAlB5H,QAASE,EAAS0H,EAAT1H,KAC1B,OACExC,EAAAA,EAAAA,MAAA,OACEE,UAAS,sFAAwFG,SAAA,EAEjGL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBG,SAAA,CAC7BqB,GACCpB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,UAEHC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAM,CACLlK,UAAS,kCAAAf,OAAyC,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO6D,cAAa,QAGrErB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAeG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KAAGJ,UAAS,+BAAiCG,SAAE8J,KAC/C7J,EAAAA,EAAAA,KAAA,KAAAD,SAAIiC,WAGRhC,EAAAA,EAAAA,KAAA,OAAAD,UACEL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CACGgK,IAAO7H,GAAM8H,OAAO,cAAc,KAAChK,EAAAA,EAAAA,KAAA,SACnC+J,IAAO7H,GAAM8H,OAAO,qBAK/B,C,iCC9De,SAASC,EAAW9I,GACjC,IAAQ+I,EAAc/I,EAAd+I,UACR9M,GAAwBC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCwF,EAAItF,EAAA,GAAE6M,EAAO7M,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAkB,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CgJ,EAAO/I,EAAA,GAAEC,EAAUD,EAAA,GAEpByM,EAAa,eAAA9C,GAAAxJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAsJ,EAAA8C,EAAA7C,EAAA,OAAAzJ,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUE,EAAAA,EAAAA,IAC1BC,EAAAA,EAAAA,WAAe,IAAAC,OAAOqL,IACtB,KAAD,EAFK1C,EAAajJ,EAAAQ,KAGnBoL,EAAgB,OAAR3C,QAAQ,IAARA,GAAc,QAAND,EAARC,EAAUxI,YAAI,IAAAuI,GAAM,QAAN8C,EAAd9C,EAAgBvI,YAAI,IAAAqL,OAAZ,EAARA,EAAsBC,OAC9B1M,GAAW,GAAOW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,kCAAAA,EAAAc,OAAA,GAAApB,EAAA,kBAErB,kBARkB,OAAAqJ,EAAAhI,MAAA,KAAAC,UAAA,KAanB,OAJAC,EAAAA,EAAAA,YAAU,WACR4K,GACF,GAAG,IAEI1D,GAAU1G,EAAAA,EAAAA,KAAA8C,EAAAA,SAAA,KAAQ9C,EAAAA,EAAAA,KAAA,KAAAD,SAAI6C,GAC/B,CCVe,SAAS2H,EAAapJ,GAMnC,IAAQuF,EAAiCvF,EAAjCuF,QAASxJ,EAAwBiE,EAAxBjE,MAAOsN,EAAiBrJ,EAAjBqJ,aAChBC,GAAYC,EAAAA,EAAAA,MAAZD,QAIFE,EAAwB,CAC5B,CACEC,MAAO,SACPC,WAAY,SACZtK,MAAO,IACPuK,YAAa,SAACC,GAA6B,OACzCC,EAAAA,EAAAA,IAAYC,SAASF,EAAOG,IAAIC,QAAS,MAAM,GAEnD,CACEP,MAAO,QACPC,WAAY,qBACZtK,MAAO,IACP6K,WAAY,SAACL,GAAkC,IAADM,EAChCN,EAAOG,IAAII,MACvB,OACEtL,EAAAA,EAAAA,KAAA,MAAAD,SACmB,QADnBsL,EACGN,EAAOG,IAAII,aAAK,IAAAD,OAAA,EAAhBA,EAAkBxJ,KAAI,SAAC0J,EAAYC,GAAa,OAC/CxL,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,UAC5BC,EAAAA,EAAAA,KAACyE,EAAAA,GAAI,CAACC,GAAE,cAAA7F,OAAgB0M,EAAK,KAAA1M,OAAI4L,GAAU1K,UACzCC,EAAAA,EAAAA,KAACiK,EAAU,CAACC,UAAWqB,OAFSC,EAI/B,KAIb,GAEF,CACEZ,MAAO,YACPC,WAAY,kBACZtK,MAAO,KAET,CACEqK,MAAO,OACPC,WAAY,OACZtK,MAAO,IACPuK,YAAa,SAACC,GAA6B,OACzChB,IAAOgB,EAAOG,IAAIO,UAAUzB,OAAO,MAAM,IAI/C,OAAOtD,GACL1G,EAAAA,EAAAA,KAACkI,EAAAA,EAAc,CACbC,GAAI,CACF,2BAA4B,CAAEC,gBAAsB,OAALlL,QAAK,IAALA,OAAK,EAALA,EAAO6D,mBAI1Df,EAAAA,EAAAA,KAAC8D,EAAAA,SAAQ,CAAA/D,UACPC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,+BAA8BG,UAC3CC,EAAAA,EAAAA,KAAC0L,EAAAA,EAAQ,CACPC,KAAMnB,EACNG,QAASA,EACTiB,aAAc,CACZC,WAAY,CACVC,gBAAiB,CAAEC,KAAM,EAAGC,SAAU,KAG1CC,gBAAiB,CAAC,EAAG,GAAI,GAAI,IAC7B9D,GAAI,CAAE5H,MAAO,aAMvB,CChFe,SAAS2L,IACtB,IAAAnP,GAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BC,EAAKH,EAALG,MAAOC,EAAMJ,EAANI,OAEfC,GAAsCC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnD+O,EAAW7O,EAAA,GAAE8O,EAAc9O,EAAA,GAClCI,GAAsCL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnD2O,EAAW1O,EAAA,GAAE2O,EAAc3O,EAAA,GAClCiI,GAAgCvI,EAAAA,EAAAA,WAAkB,GAAMwI,GAAAtI,EAAAA,EAAAA,GAAAqI,EAAA,GAAjD2G,EAAQ1G,EAAA,GAAE2G,EAAW3G,EAAA,GAEtB4G,EAAS,eAAAnF,GAAAxJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAoE,EAAA,OAAAtE,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACI,KAAhB0N,GAAsC,KAAhBE,EAAkB,CAAA9N,EAAAE,KAAA,SAC1CoJ,EAAAA,EAAAA,GAAe,6BACfA,EAAAA,EAAAA,GAAe,4BAA4BtJ,EAAAE,KAAA,gBAGvB,OAHuBF,EAAAC,KAAA,EAGzCgO,GAAY,GAAMjO,EAAAE,KAAA,EACZE,EAAAA,EAAAA,IAAgB,GAADE,OAChBD,EAAAA,EAAAA,KAAS,KAAAC,OAAiC,QAAjCwD,EAAI3D,EAAAA,EAAAA,0BAA6B,IAAA2D,OAAA,EAA7BA,EAA+BvD,SAC/C,CACE4N,cAAeP,EACfQ,SAAUN,IAEZ,KAAD,GACDrE,EAAAA,EAAAA,IAAe,+CAA+C,WAC5DrD,OAAOC,SAASC,KAAI,YAAAhG,OAAe1B,GACnCuB,EAAAA,EAAAA,cACF,IACAH,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,UAEAsJ,EAAAA,EAAAA,GACE,gEAEF2E,GAAY,GACZrN,QAAQC,IAAGb,EAAAW,IACX,yBAAAX,EAAAc,OAAA,GAAApB,EAAA,mBAGL,kBA5Bc,OAAAqJ,EAAAhI,MAAA,KAAAC,UAAA,KA8Bf,OACES,EAAAA,EAAAA,KAAC8D,EAAAA,SAAQ,CAAA/D,UACPC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CAACrD,UAAU,OAAMG,UACzBC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oBAAmBG,UAChCL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0EAAyEG,SAAA,EACtFL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,GAAEG,SAAA,EACfC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBACHC,EAAAA,EAAAA,KAAA,SACEqI,YAAY,eACZC,KAAK,WACLC,MAAO4D,EACP3D,SAAU,SAACC,GAAM,OAAK2D,EAAe3D,EAAEC,OAAOH,MAAM,EACpD3I,UAAU,iHAGdF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,GAAEG,SAAA,EACfC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBACHC,EAAAA,EAAAA,KAAA,SACEqI,YAAY,eACZC,KAAK,WACLC,MAAO8D,EACP7D,SAAU,SAACC,GAAM,OAAK6D,EAAe7D,EAAEC,OAAOH,MAAM,EACpD3I,UAAU,iHAIdI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,aAAYG,UACzBC,EAAAA,EAAAA,KAAA,UACEL,QAAS8M,EACT7M,UAAS,aAAAf,OAAoB,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO6D,cAAa,kBAAAlC,OAAsB,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO+L,gBAAe,wDAAApK,OAA4D,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO6D,cAAa,qCAC9J6L,SAAUL,EAASxM,SAElBwM,GAAWvM,EAAAA,EAAAA,KAACkJ,EAAAA,EAAgB,CAACC,KAAM,KAAS,8BAQ7D,CCvEe,SAAS0D,IACtB,IAAA9P,GAA8CC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjDyJ,EAAO3J,EAAP2J,QAASvJ,EAAMJ,EAANI,OAAQ2P,EAAS/P,EAAT+P,UAAW5P,EAAKH,EAALG,MAE5BuN,GAAYC,EAAAA,EAAAA,MAAZD,QAGFsC,EADe,IAAIC,gBAAgBrI,OAAOC,SAASqI,QAC3BC,IAAI,OAClC9P,GAAsBC,EAAAA,EAAAA,UAAiB,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlC+P,EAAG7P,EAAA,GAAE8P,EAAM9P,EAAA,IAElBkC,EAAAA,EAAAA,YAAU,WAAO,IAAD6C,EACd,GAAI0K,EAAU,CACZ,IAAMM,EAAeC,OAAOC,MAAMtC,SAAS8B,IAIvC,EAHA9B,SAAS8B,GAAY,EACnB,EACA9B,SAAS8B,GAEfK,EAAOC,EACT,EACiC,QAA7BhL,EAAA3D,EAAAA,EAAAA,0BAA6B,IAAA2D,OAAA,EAA7BA,EAA+Ba,gBAAiBuH,IAElD/L,EAAAA,EAAAA,eACAiG,OAAOC,SAASC,KAAI,YAAAhG,OAAe4L,IAEtB,KAAXtN,GACF2P,EAAUrC,EAEd,GAAG,CAACA,EAAStN,EAAQ2P,EAAWC,KAEhCvN,EAAAA,EAAAA,YAAU,WACRgO,GACF,GAAG,IAEH,IAAA9P,GAAsCL,EAAAA,EAAAA,WAAkB,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtD+P,EAAW9P,EAAA,GAAE+P,EAAc/P,EAAA,GAClCiI,GAAwCvI,EAAAA,EAAAA,UAAc,IAAGwI,GAAAtI,EAAAA,EAAAA,GAAAqI,EAAA,GAAlD4E,EAAY3E,EAAA,GAAE8H,EAAe9H,EAAA,GAE9B2H,EAAO,eAAAlG,GAAAxJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA2P,EAAA1P,EAAA2P,EAAA,OAAA9P,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGmC,OAFjDiP,GAAe,GAAMnP,EAAAC,KAAA,EAEbN,EAAYQ,EAAAA,EAAAA,mBAA6BH,EAAAE,KAAA,EAEtBE,EAAAA,EAAAA,IACvBC,EAAAA,EAAAA,aAAiB,IAAAC,OAAOX,EAAKY,UAC7B,KAAD,EAFK+O,EAAUtP,EAAAQ,KAGhB4O,EAA0B,QAAXC,EAACC,EAAM7O,YAAI,IAAA4O,OAAA,EAAVA,EAAY3O,SAC5ByO,GAAe,GAAOnP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEtBY,QAAQC,IAAGb,EAAAW,IAAQ,yBAAAX,EAAAc,OAAA,GAAApB,EAAA,mBAEtB,kBAbY,OAAAqJ,EAAAhI,MAAA,KAAAC,UAAA,KAeb,OAAOmH,GACL1G,EAAAA,EAAAA,KAAC8N,EAAAA,EAAc,KAEfpO,EAAAA,EAAAA,MAAAoD,EAAAA,SAAA,CAAA/C,SAAA,EACEC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,KACPnC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CAAC8K,OAAK,EAAAhO,UACdL,EAAAA,EAAAA,MAACsO,EAAAA,EAAI,CACHzF,MAAO4E,EACP3E,SAAU,SAACC,EAAQwF,GAAa,OAAKb,EAAOa,EAAS,EAAClO,SAAA,EAEtDC,EAAAA,EAAAA,KAACkO,EAAAA,EAAG,CAACC,MAAM,aACXnO,EAAAA,EAAAA,KAACkO,EAAAA,EAAG,CAACC,MAAM,kBACXnO,EAAAA,EAAAA,KAACkO,EAAAA,EAAG,CAACC,MAAM,kBACXnO,EAAAA,EAAAA,KAACkO,EAAAA,EAAG,CAACC,MAAM,kBAGN,IAARhB,GACCnN,EAAAA,EAAAA,KAACuK,EAAY,CACX7D,QAAS+G,EACTjD,aAAcA,EACdtN,MAAOA,IAEP,MACJwC,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEuO,UAAW,QAAUxO,UAAU,OAAMG,SAAA,CACxC,IAARoN,GAAYnN,EAAAA,EAAAA,KAAC+E,EAAe,IAAM,KAC1B,IAARoI,GAAYnN,EAAAA,EAAAA,KAACoJ,EAAa,IAAM,KACxB,IAAR+D,GAAYnN,EAAAA,EAAAA,KAACkM,EAAc,IAAM,UAI1C,C","sources":["components/elements/message_badge.tsx","components/elements/notification_badge.tsx","components/elements/notification_drawer.tsx","components/navbar.tsx","pages/profile/sections/account_settings.tsx","pages/profile/sections/notifications.tsx","pages/profile/sections/getCourseNameById.tsx","pages/profile/sections/transactions.tsx","pages/profile/sections/change_pwd.tsx","pages/profile/account.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport { StorageBox } from \"../../core/storage\";\r\nimport baseService from \"../../core/baseServices\";\r\nimport urls from \"../../core/base.url\";\r\n\r\nexport default function MessageBadge() {\r\n  const navigate = useNavigate();\r\n  const { theme, corpid } = useContext(GeneralContext);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  async function getChats() {\r\n    const user = StorageBox.retrieveUserData();\r\n    setLoading(true);\r\n    try {\r\n      const res: any = await baseService.get(\r\n        urls.unreadConvo + `/${user?.user_id}`\r\n      );\r\n      const num = res.data?.payload;\r\n      setCount(num);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getChats();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      onClick={() => navigate(`/messages/${corpid}`)}\r\n      className=\"position-relative  ml-4\"\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth={1.5}\r\n        stroke=\"currentColor\"\r\n        // className=\"w-6 h-6\"\r\n        style={{\r\n          height: \"30px\",\r\n          width: \"30px\",\r\n          marginRight: \"13px\",\r\n          color: \"gray\",\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z\"\r\n        />\r\n      </svg>\r\n      <span\r\n        style={{ fontSize: \"11px\", background: theme?.primary_color }}\r\n        className=\"position-absolute top-0 start-0 translate-middle rounded-circle text-white px-1\"\r\n      >\r\n        {count}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function NotificationBadge() {\r\n  const navigate = useNavigate();\r\n  const { theme, corpid, openNotification } = useContext(GeneralContext);\r\n\r\n  return (\r\n    <div\r\n      // onClick={() => navigate(`/account/${corpid}?tab=1`)}\r\n      onClick={() => openNotification()}\r\n      className=\"position-relative ml-1\"\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth={1.5}\r\n        stroke=\"currentColor\"\r\n        style={{\r\n          height: \"30px\",\r\n          width: \"30px\",\r\n          marginRight: \"13px\",\r\n          color: \"gray\",\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0\"\r\n        />\r\n      </svg>\r\n      {/* <span\r\n        style={{ fontSize: \"11px\", background: theme?.primary_color }}\r\n        className=\"position-absolute top-0 start-0 translate-middle rounded-circle text-white px-1\"\r\n      >\r\n        0\r\n      </span> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport NotificationBadge from \"./notification_badge\";\r\nimport moment from \"moment\";\r\nimport { formatTimeAgo } from \"../helpers\";\r\n\r\nexport default function NotificationDrawer(props: any) {\r\n  const { read, unread, openNotification, pop } = useContext(GeneralContext);\r\n  const [notifications, setNotifications] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    setNotifications([...read, ...unread]);\r\n    // console.log(read);\r\n  }, [read, unread]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationBadge />\r\n      {pop ? (\r\n        <div\r\n          className=\"w-full  absolute z-10 right-0 h-screen overflow-x-hidden transform translate-x-0 transition ease-in-out duration-700\"\r\n          id=\"notification\"\r\n          //   style={{\r\n          //     scrollbarWidth: \"thin\",\r\n          //     scrollbarColor: \"transparent\",\r\n          //   }}\r\n        >\r\n          <div\r\n            className=\"2xl:w-4/12 bg-gray-50 h-screen overflow-y-auto p-8 absolute right-0\"\r\n            style={{\r\n              scrollbarWidth: \"thin\",\r\n              scrollbarColor: \"transparent\",\r\n            }}\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <p className=\"text-lg font-semibold leading-6 text-gray-800\">\r\n                Notifications\r\n              </p>\r\n              <div\r\n                className=\"cursor-pointer\"\r\n                onClick={() => openNotification()}\r\n              >\r\n                <svg\r\n                  width={24}\r\n                  height={24}\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M18 6L6 18\"\r\n                    stroke=\"#4B5563\"\r\n                    strokeWidth=\"1.25\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                  <path\r\n                    d=\"M6 6L18 18\"\r\n                    stroke=\"#4B5563\"\r\n                    strokeWidth=\"1.25\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            {/* notifications */}\r\n            {notifications.map((ntf_: any, idx_: any) => (\r\n              <div\r\n                key={idx_}\r\n                className=\"w-full p-3 mt-4 bg-white rounded hover:shadow flex\"\r\n              >\r\n                <div className=\"w-8 h-8 border rounded-full border-gray-200 flex items-center justify-center\">\r\n                  <svg\r\n                    width={16}\r\n                    height={16}\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M4.30325 12.6667L1.33325 15V2.66667C1.33325 2.48986 1.40349 2.32029 1.52851 2.19526C1.65354 2.07024 1.82311 2 1.99992 2H13.9999C14.1767 2 14.3463 2.07024 14.4713 2.19526C14.5963 2.32029 14.6666 2.48986 14.6666 2.66667V12C14.6666 12.1768 14.5963 12.3464 14.4713 12.4714C14.3463 12.5964 14.1767 12.6667 13.9999 12.6667H4.30325ZM5.33325 6.66667V8H10.6666V6.66667H5.33325Z\"\r\n                      fill=\"#4338CA\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"pl-3\">\r\n                  <p className=\"text-sm leading-none\">{ntf_.message}</p>\r\n                  <p className=\"text-xs flex leading-3 pt-1 text-gray-500\">\r\n                    {/* {moment(ntf_.date).format(\"hh:mm:ss a\")} */}\r\n                    {formatTimeAgo(ntf_.date)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div className=\"flex items-center justiyf-between\">\r\n              <hr className=\"w-full\" />\r\n              <p className=\"text-sm flex flex-shrink-0 leading-normal px-3 py-16 text-gray-500\">\r\n                Thats all for now :)\r\n              </p>\r\n              <hr className=\"w-full\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { Fragment, useContext, useState } from \"react\";\r\nimport { Container, Image, Navbar, Form } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport GeneralContext from \"../context/gen\";\r\nimport { StorageBox } from \"../core/storage\";\r\nimport ChangeCurrency from \"./elements/change_currency\";\r\nimport MessageBadge from \"./elements/message_badge\";\r\nimport NotificationBadge from \"./elements/notification_badge\";\r\nimport NotificationDrawer from \"./elements/notification_drawer\";\r\n\r\nexport default function NavBar() {\r\n  const { theme, corpid } = useContext(GeneralContext);\r\n  const navigate = useNavigate();\r\n  const user: any = StorageBox.retrieveUserData();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const links = [\r\n    {\r\n      name: `My courses`,\r\n      url: `/my-courses/${corpid}`,\r\n    },\r\n    {\r\n      name: `Messages`,\r\n      url: `/messages/${corpid}`,\r\n    },\r\n    {\r\n      name: `Account`,\r\n      url: `/account/${corpid}?tab=0`,\r\n    },\r\n    // {\r\n    //   name: `Notification`,\r\n    //   url: `/account/${corpid}?tab=1`,\r\n    // },\r\n    {\r\n      name: `Transactions`,\r\n      url: `/account/${corpid}?tab=2`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          {/* <Navbar.Brand\r\n            onClick={() =>\r\n              navigate(`/main/${user ? user.corporate_id : corpid}`)\r\n            }\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <Image\r\n              src={theme?.img}\r\n              alt=\"logo\"\r\n              className=\"d-inline-block align-top me-2 lg:h-[50px] lg:w-[200px] h-[20px] w-[100px] \"\r\n              style={{ width: \"150px\", height: \"40px\", objectFit: \"cover\" }}\r\n              fluid\r\n            />\r\n          </Navbar.Brand> */}\r\n          <div\r\n            className=\"h-12 w-16 cursor-pointer\"\r\n            onClick={() =>\r\n              navigate(`/main/${user ? user.corporate_id : corpid}`)\r\n            }\r\n          >\r\n            <img\r\n              src={theme?.img ?? `/logo.png`}\r\n              alt=\"logo\"\r\n              className=\"h-full w-full\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <span\r\n              style={{\r\n                color: theme?.primary_color,\r\n                fontWeight: \"bolder\",\r\n                marginRight: \"10px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              {theme?.name}\r\n            </span>\r\n            <div className=\"mx-2 flex items-center justify-center\">\r\n              {/* <ChangeCurrency /> */}\r\n              <MessageBadge />\r\n              {/* <NotificationBadge /> */}\r\n              <NotificationDrawer />\r\n            </div>\r\n            <Avatar onClick={() => setOpen(true)} style={{ cursor: \"pointer\" }}>\r\n              {StorageBox.retrieveUserData()?.first_name?.[0]}\r\n              {StorageBox.retrieveUserData()?.last_name?.[0]}\r\n            </Avatar>\r\n          </div>\r\n        </Container>\r\n      </Navbar>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-10\" onClose={setOpen}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"transition ease-out duration-200\"\r\n            enterFrom=\"opacity-0 translate-y-1\"\r\n            enterTo=\"opacity-100 translate-y-0\"\r\n            leave=\"transition ease-in duration-150\"\r\n            leaveFrom=\"opacity-100 translate-y-0\"\r\n            leaveTo=\"opacity-0 translate-y-1\"\r\n          >\r\n            <div className=\"fixed inset-0 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <div className=\"fixed inset-0 overflow-hidden\">\r\n            <div className=\"absolute inset-0 overflow-hidden\">\r\n              <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10\">\r\n                <Transition.Child\r\n                  as={Fragment}\r\n                  enter=\"transition ease-out duration-200\"\r\n                  enterFrom=\"opacity-0 translate-y-1\"\r\n                  enterTo=\"opacity-100 translate-y-0\"\r\n                  leave=\"transition ease-in duration-150\"\r\n                  leaveFrom=\"opacity-100 translate-y-0\"\r\n                  leaveTo=\"opacity-0 translate-y-1\"\r\n                >\r\n                  <Dialog.Panel className=\"pointer-events-auto w-screen max-w-md pl-6 pr-6\">\r\n                    <div className=\"flex font-serif flex-col overflow-y-hidden bg-transparent px-5\">\r\n                      <div className=\"flex-1 overflow-y-auto py-6 px-4 sm:px-6\">\r\n                        <div className=\"mt-8\">\r\n                          <div className=\"bg-white rounded-5 font-serif overflow-y-hidden\">\r\n                            <div className=\"py-4 px-4\">\r\n                              <ul>\r\n                                {links.map((_d, i) => {\r\n                                  return (\r\n                                    <Fragment key={i}>\r\n                                      <li className=\"mt-2\">\r\n                                        <Link\r\n                                          to={_d?.url}\r\n                                          className={`text-decoration-none text-[${theme?.primary_color}] hover:text-[${theme?.primary_color}]`}\r\n                                        >\r\n                                          {_d.name}\r\n                                        </Link>\r\n                                      </li>\r\n                                      {i === 1 ? (\r\n                                        <hr className=\"my-1 mb-3 border-t border-secondary-400\" />\r\n                                      ) : null}\r\n                                    </Fragment>\r\n                                  );\r\n                                })}\r\n                              </ul>\r\n                            </div>\r\n                            <hr className=\"my-1 mx-5 border-t border-secondary-400\" />\r\n\r\n                            <button\r\n                              className=\"flex gap-6 px-4 mt-7 mb-5\"\r\n                              onClick={() => {\r\n                                StorageBox.clearStorage();\r\n                                window.location.href = `/sign-in/${corpid}`;\r\n                              }}\r\n                            >\r\n                              <LogoutIcon\r\n                                style={{ color: theme?.primary_color }}\r\n                              />\r\n                              <p>Logout</p>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Dialog.Panel>\r\n                </Transition.Child>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </>\r\n  );\r\n}\r\n","import { CircularProgress, LinearProgress } from \"@mui/material\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport baseService from \"../../../core/baseServices\";\r\nimport urls from \"../../../core/base.url\";\r\nimport { StorageBox } from \"../../../core/storage\";\r\nimport { displaySuccess, displayWarning } from \"../../../components/alert\";\r\nimport GeneralContext from \"../../../context/gen\";\r\n\r\nexport default function AccountSettings() {\r\n  const { theme } = useContext(GeneralContext);\r\n  const currentDate = new Date();\r\n  const minDateOfBirthValue = new Date(\r\n    currentDate.getFullYear() - 16,\r\n    currentDate.getMonth(),\r\n    currentDate.getDate()\r\n  );\r\n  const minDateOfBirthFormatted = minDateOfBirthValue\r\n    .toISOString()\r\n    .split(\"T\")[0];\r\n\r\n  const [fname, setFname] = useState<string>(\"\");\r\n  const [lname, setlanme] = useState<string>(\"\");\r\n  const [formdob, setDob] = useState(\"\");\r\n  const [loc, setLoc] = useState<string>(\"\");\r\n  const [phone, setPhone] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  // const [user, setUser] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  async function getUser() {\r\n    setLoading(true);\r\n    try {\r\n      const user: any = StorageBox.retrieveUserData();\r\n      const usr: any = await baseService.get(urls.getUser + `/${user.user_id}`);\r\n\r\n      if (usr?.data?.data) {\r\n        const load = usr?.data?.data;\r\n        setFname(load.first_name || \"\");\r\n        setlanme(load.last_name || \"\");\r\n        setPhone(load?.msisdn || \"\");\r\n        setLoc(load?.location || \"\");\r\n        setDob(load?.dob || \"2000-01-01\");\r\n      }\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const saveChanges = async () => {\r\n    if (loc.length < 1) {\r\n      displayWarning(\"Location must not be empty!\");\r\n      return;\r\n    } else if (phone && /^\\+233\\d{9,}$/.test(phone)) {\r\n      displayWarning(\"Phone number must be 10 digit!\");\r\n      return;\r\n    }\r\n    const payload: any = {\r\n      first_name: fname,\r\n      last_name: lname,\r\n    };\r\n\r\n    if (formdob) payload.dob = formdob;\r\n    if (phone) payload.msisdn = phone;\r\n    if (loc) payload.location = loc;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const user: any = StorageBox.retrieveUserData();\r\n\r\n      const response: any = await baseService.put(\r\n        urls.updateProfile + `/${user.user_id}`,\r\n        payload\r\n      );\r\n\r\n      if (response?.data?.data) {\r\n        const usr: any = await baseService.get(\r\n          urls.getUser + `/${user.user_id}`\r\n        );\r\n        const load = usr?.data?.data;\r\n\r\n        setFname(load.first_name || \"\");\r\n        setlanme(load.last_name || \"\");\r\n        setPhone(load?.msisdn || \"\");\r\n        setLoc(load?.location || \"\");\r\n        setDob(load?.dob || \"2000-01-01\");\r\n\r\n        displaySuccess(response?.data?.data?.message, () => {\r\n          const userNew: any = StorageBox.retrieveUserData();\r\n          userNew.first_name = fname;\r\n          userNew.last_name = lname;\r\n          userNew.dob = formdob;\r\n          userNew.location = loc;\r\n          userNew.msisdn = phone;\r\n          StorageBox.saveUserData(userNew);\r\n        });\r\n        // console.log(response?.data?.data);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePhoneNumberChange = (event: any) => {\r\n    let inputNumber = event.target.value;\r\n    if (inputNumber.length >= 13) {\r\n    } else {\r\n      // Remove all non-digit characters\r\n      inputNumber = inputNumber.replace(/\\D/g, \"\");\r\n\r\n      // Add +233 prefix if input starts with 0\r\n      if (inputNumber.startsWith(\"0\")) {\r\n        inputNumber = \"+233\" + inputNumber.substring(1);\r\n      }\r\n\r\n      setPhone(inputNumber);\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <LinearProgress\r\n      sx={{\r\n        \"& .MuiLinearProgress-bar\": { backgroundColor: theme?.primary_color },\r\n      }}\r\n    />\r\n  ) : (\r\n    <Container className=\"mt-5\">\r\n      <div className=\"grid grid-cols-12\">\r\n        <div className=\"md:col-span-8 col-span-12  grid md:grid-cols-2 grid-cols-1  gap-12 my-8\">\r\n          <div className=\"\">\r\n            <p>First Name</p>\r\n            <input\r\n              placeholder=\"First name\"\r\n              type=\"text\"\r\n              name=\"fname\"\r\n              value={fname}\r\n              onChange={(e: any) => setFname(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n          <div className=\"\">\r\n            <p>Last Name</p>\r\n            <input\r\n              placeholder=\"Last name\"\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={lname}\r\n              onChange={(e: any) => setlanme(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n          <div className=\"\">\r\n            <p>Phone</p>\r\n            <input\r\n              placeholder=\"Phone number\"\r\n              type=\"tel\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              onChange={handlePhoneNumberChange}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n          <div className=\"\">\r\n            <p>Location</p>\r\n            <input\r\n              placeholder=\"Location\"\r\n              type=\"text\"\r\n              name=\"loc\"\r\n              value={loc}\r\n              onChange={(e: any) => setLoc(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Date of birth</p>\r\n            <input\r\n              placeholder=\"Location\"\r\n              type=\"date\"\r\n              name=\"formdob\"\r\n              value={formdob}\r\n              max={minDateOfBirthFormatted}\r\n              onChange={(e: any) => setDob(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"text-right\">\r\n            <button\r\n              onClick={saveChanges}\r\n              className={`hover:bg-[${theme?.primary_color}] hover:text-[${theme?.secondary_color}] h-10 flex-col items-center flex rounded-5 border-[${theme?.primary_color}] border py-2 px-8 bg-transparent`}\r\n              //   disabled={updating}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : \"Save changes\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport function InputWithIcon(props: any) {\r\n  const {\r\n    icon,\r\n    icon1,\r\n    className,\r\n    type,\r\n    error,\r\n    placeholder,\r\n    disabled,\r\n    value,\r\n    onChange,\r\n  } = props;\r\n  const ring = error ? `ring-1 ring-secondary` : \"\";\r\n  return (\r\n    <div className={` ${className} ${disabled ? \"bg-primary-200\" : \"\"} `}>\r\n      {icon1 ? (\r\n        <span className=\"flex justify-center items-center px-4\">\r\n          <img src={icon1} alt=\"e0m\" />\r\n        </span>\r\n      ) : null}\r\n      <input\r\n        data-testid=\"input\"\r\n        className={`focus:outline-none font-serif border-primary-300 px-4 bg-primary-100  ${\r\n          disabled ? \"bg-primary-200\" : \"\"\r\n        }   w-full ${ring} `}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {icon ? (\r\n        <span className=\"flex justify-center items-center px-4\">\r\n          <i className={icon}></i>\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { LinearProgress } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport GeneralContext from \"../../../context/gen\";\r\nimport { Cancel } from \"@mui/icons-material\";\r\nimport { useFetcher } from \"react-router-dom\";\r\n\r\nexport default function Notifications() {\r\n  const { read, unread, theme } = useContext(GeneralContext);\r\n  useEffect(() => {\r\n    const ntfs = {\r\n      read: read,\r\n      unread: unread,\r\n    };\r\n    console.log(ntfs);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md={{ span: 8, offset: 1 }}>\r\n          {unread.map((_d: any, i: number) => (\r\n            <NotificationCard key={i} notif={_d} theme={theme} read={false} />\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ span: 8, offset: 1 }}>\r\n          {read.map((_d: any, i: number) => (\r\n            <NotificationCard key={i} notif={_d} theme={theme} read={true} />\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction NotificationCard(props: { notif: any; theme: any; read: boolean }) {\r\n  const { notif, theme, read } = props;\r\n  const { heading, message, date } = notif;\r\n  return (\r\n    <div\r\n      className={`flex justify-between item-center md:gap-1 gap-4 border-[blue] border-b py-6 md:px-3`}\r\n    >\r\n      <div className=\"flex space-x-10\">\r\n        {read ? (\r\n          <p>read</p>\r\n        ) : (\r\n          <Cancel\r\n            className={`h-10 w-10 cursor-pointer text-[${theme?.primary_color}]`}\r\n          />\r\n        )}\r\n        <div className=\"flex-col flex\">\r\n          <p className={`font-bold text-secondary-900`}>{heading}</p>\r\n          <p>{message}</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          {moment(date).format(\"hh:mm:ss a\")} <br />\r\n          {moment(date).format(\"DD/mm/yyyy\")}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// function NtfPad(props: { notif: any; theme: any; read: boolean }) {\r\n//   const { notif, theme, read } = props;\r\n//   const { heading, message, date } = notif;\r\n\r\n//   return <div className=\"\"></div>;\r\n// }\r\n","import { useEffect, useState } from \"react\";\r\nimport baseService from \"../../../core/baseServices\";\r\nimport urls from \"../../../core/base.url\";\r\n\r\nexport default function CourseName(props: { course_id: string }) {\r\n  const { course_id } = props;\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const getCourseName = async () => {\r\n    try {\r\n      const response: any = await baseService.get(\r\n        urls.getCourses + `/${course_id}`\r\n      );\r\n      setName(response?.data?.data?.title);\r\n      setLoading(false);\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    getCourseName();\r\n  }, []);\r\n\r\n  return loading ? <></> : <p>{name}</p>;\r\n}\r\n","import { LinearProgress } from \"@mui/material\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridRenderCellParams,\r\n  GridValueGetterParams,\r\n} from \"@mui/x-data-grid\";\r\nimport moment from \"moment\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { formatCedis } from \"../../../components/helpers\";\r\nimport CourseName from \"./getCourseNameById\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport default function Transactions(props: {\r\n  loading: boolean;\r\n  transactions: any;\r\n  theme: any;\r\n}) {\r\n  // const { convertValue } = useContext(CurrencyContext);\r\n  const { loading, theme, transactions } = props;\r\n  const { corp_id } = useParams();\r\n\r\n  // console.log(transactions);\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: \"amount\",\r\n      headerName: \"Amount\",\r\n      width: 180,\r\n      valueGetter: (params: GridValueGetterParams) =>\r\n        formatCedis(parseInt(params.row.amount), \"GHS\"),\r\n    },\r\n    {\r\n      field: \"items\",\r\n      headerName: \"Course(s) purchase\",\r\n      width: 320,\r\n      renderCell: (params: GridRenderCellParams) => {\r\n        const ids = params.row.items;\r\n        return (\r\n          <ul>\r\n            {params.row.items?.map((_item: any, index: number) => (\r\n              <li className=\"mb-3 list-disc\" key={index}>\r\n                <Link to={`/my-course/${_item}/${corp_id}`}>\r\n                  <CourseName course_id={_item} />\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"reference\",\r\n      headerName: \"Transaction Ref\",\r\n      width: 200,\r\n    },\r\n    {\r\n      field: \"date\",\r\n      headerName: \"Date\",\r\n      width: 200,\r\n      valueGetter: (params: GridValueGetterParams) =>\r\n        moment(params.row.add_date).format(\"LLL\"),\r\n    },\r\n  ];\r\n\r\n  return loading ? (\r\n    <LinearProgress\r\n      sx={{\r\n        \"& .MuiLinearProgress-bar\": { backgroundColor: theme?.primary_color },\r\n      }}\r\n    />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"min-h-[50vh] w-full mt-1 p-3\">\r\n        <DataGrid\r\n          rows={transactions}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: 5 },\r\n            },\r\n          }}\r\n          pageSizeOptions={[5, 10, 15, 20]}\r\n          sx={{ width: \"100%\" }}\r\n          // checkboxSelection\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst tableTesting = () => (\r\n  <div className=\"overflow-x-auto\">\r\n    <table className=\"min-w-full divide-y divide-gray-200\">\r\n      <thead className=\"bg-gray-50\">\r\n        <tr>\r\n          <th\r\n            scope=\"col\"\r\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n          >\r\n            Name\r\n          </th>\r\n          <th\r\n            scope=\"col\"\r\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n          >\r\n            Age\r\n          </th>\r\n          <th\r\n            scope=\"col\"\r\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n          >\r\n            Email\r\n          </th>\r\n          <th\r\n            scope=\"col\"\r\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n          >\r\n            Country\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n        <tr>\r\n          <td className=\"px-6 py-4 whitespace-nowrap\">John Doe</td>\r\n          <td className=\"px-6 py-4 whitespace-nowrap\">30</td>\r\n          <td className=\"px-6 py-4 whitespace-nowrap\">john@example.com</td>\r\n          <td className=\"px-6 py-4 whitespace-nowrap\">USA</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n","import { Fragment, useState, useContext } from \"react\";\r\nimport { StorageBox } from \"../../../core/storage\";\r\nimport { displaySuccess, displayWarning } from \"../../../components/alert\";\r\nimport urls from \"../../../core/base.url\";\r\nimport baseService from \"../../../core/baseServices\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport GeneralContext from \"../../../context/gen\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function ChangePassword() {\r\n  const { theme, corpid } = useContext(GeneralContext);\r\n\r\n  const [oldPassword, setOldPassword] = useState<string>(\"\");\r\n  const [newPassword, setNewPassword] = useState<string>(\"\");\r\n  const [changing, setChanging] = useState<boolean>(false);\r\n\r\n  const changePwd = async () => {\r\n    if (oldPassword === \"\" || newPassword === \"\") {\r\n      displayWarning(\"Please complete the form\");\r\n      displayWarning(\"Please complete the form\");\r\n    } else {\r\n      try {\r\n        setChanging(true);\r\n        await baseService.put(\r\n          `${urls.user}/${StorageBox.retrieveUserData()?.user_id}`,\r\n          {\r\n            prev_password: oldPassword,\r\n            password: newPassword,\r\n          }\r\n        );\r\n        displaySuccess(\"Password changed successfully, please login\", () => {\r\n          window.location.href = `/sign-in/${corpid}`;\r\n          StorageBox.clearStorage();\r\n        });\r\n        // console.log(update);\r\n      } catch (error) {\r\n        displayWarning(\r\n          \"There was an error changing password, Please try again later\"\r\n        );\r\n        setChanging(false);\r\n        console.log(error);\r\n        //   errorHelper(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className=\"mt-5\">\r\n        <div className=\"grid grid-cols-12\">\r\n          <div className=\"md:col-span-8 col-span-12  grid md:grid-cols-2 grid-cols-1  gap-12 my-8\">\r\n            <div className=\"\">\r\n              <p>Old Password</p>\r\n              <input\r\n                placeholder=\"Old Password\"\r\n                type=\"password\"\r\n                value={oldPassword}\r\n                onChange={(e: any) => setOldPassword(e.target.value)}\r\n                className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n              />\r\n            </div>\r\n            <div className=\"\">\r\n              <p>New password</p>\r\n              <input\r\n                placeholder=\"New password\"\r\n                type=\"password\"\r\n                value={newPassword}\r\n                onChange={(e: any) => setNewPassword(e.target.value)}\r\n                className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"text-right\">\r\n              <button\r\n                onClick={changePwd}\r\n                className={`hover:bg-[${theme?.primary_color}] hover:text-[${theme?.secondary_color}] h-10 flex-col items-center flex rounded-5 border-[${theme?.primary_color}] border py-2 px-8 bg-transparent`}\r\n                disabled={changing}\r\n              >\r\n                {changing ? <CircularProgress size={24} /> : \"Change password\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingOverLay from \"../../components/loader\";\r\nimport NavBar from \"../../components/navbar\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport { StorageBox } from \"../../core/storage\";\r\nimport { Tabs, styled, Tab } from \"@mui/material\";\r\nimport baseService from \"../../core/baseServices\";\r\nimport urls from \"../../core/base.url\";\r\nimport AccountSettings from \"./sections/account_settings\";\r\nimport Notifications from \"./sections/notifications\";\r\nimport Transactions from \"./sections/transactions\";\r\nimport ChangePassword from \"./sections/change_pwd\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function Account() {\r\n  const { loading, corpid, setCorpId, theme } = useContext(GeneralContext);\r\n\r\n  const { corp_id } = useParams();\r\n\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const tabindex = searchParams.get(\"tab\");\r\n  const [tab, setTab] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if (tabindex) {\r\n      const set: number = !Number.isNaN(parseInt(tabindex))\r\n        ? parseInt(tabindex) > 2\r\n          ? 2\r\n          : parseInt(tabindex)\r\n        : 0;\r\n      setTab(set);\r\n    }\r\n    if (StorageBox.retrieveUserData()?.corporate_id !== corp_id) {\r\n      // console.log(\"Logout and \");\r\n      StorageBox.clearStorage();\r\n      window.location.href = `/sign-in/${corp_id}`;\r\n    }\r\n    if (corpid === \"\") {\r\n      setCorpId(corp_id);\r\n    }\r\n  }, [corp_id, corpid, setCorpId, tabindex]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const [dataLoading, setDataLoading] = useState<boolean>(true);\r\n  const [transactions, setTransactions] = useState<any>([]);\r\n\r\n  const getData = async () => {\r\n    setDataLoading(true);\r\n    try {\r\n      const user: any = StorageBox.retrieveUserData();\r\n\r\n      const trans: any = await baseService.get(\r\n        urls.transactions + `/${user.user_id}`\r\n      );\r\n      setTransactions(trans.data?.payload);\r\n      setDataLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingOverLay />\r\n  ) : (\r\n    <>\r\n      <NavBar />\r\n      <Container fluid>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={(e: any, newValue: any) => setTab(newValue)}\r\n        >\r\n          <Tab label=\"Account\" />\r\n          <Tab label=\"Notification\" />\r\n          <Tab label=\"Transactions\" />\r\n          <Tab label=\"Security\" />\r\n        </Tabs>\r\n      </Container>\r\n      {tab === 2 ? (\r\n        <Transactions\r\n          loading={dataLoading}\r\n          transactions={transactions}\r\n          theme={theme}\r\n        />\r\n      ) : null}\r\n      <div style={{ minHeight: \"50vh\" }} className=\"px-5\">\r\n        {tab === 0 ? <AccountSettings /> : null}\r\n        {tab === 1 ? <Notifications /> : null}\r\n        {tab === 3 ? <ChangePassword /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["MessageBadge","navigate","useNavigate","_useContext","useContext","GeneralContext","theme","corpid","_useState","useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","setLoading","_getChats","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","_res$data","res","num","wrap","_context","prev","next","StorageBox","baseService","urls","concat","user_id","sent","data","payload","t0","console","log","stop","apply","arguments","useEffect","getChats","_jsxs","onClick","className","style","cursor","children","_jsx","xmlns","fill","viewBox","strokeWidth","stroke","height","width","marginRight","color","strokeLinecap","strokeLinejoin","d","fontSize","background","primary_color","NotificationBadge","openNotification","NotificationDrawer","props","read","unread","pop","notifications","setNotifications","_toConsumableArray","id","scrollbarWidth","scrollbarColor","map","ntf_","idx_","message","formatTimeAgo","date","NavBar","_theme$img","_StorageBox$retrieveU","_StorageBox$retrieveU2","_StorageBox$retrieveU3","_StorageBox$retrieveU4","open","setOpen","links","name","url","_Fragment","Navbar","bg","Container","corporate_id","src","img","alt","fontWeight","marginTop","Avatar","first_name","last_name","Transition","show","as","Fragment","Dialog","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","_d","i","Link","to","window","location","href","LogoutIcon","AccountSettings","currentDate","Date","minDateOfBirthFormatted","getFullYear","getMonth","getDate","toISOString","split","fname","setFname","lname","setlanme","_useState5","_useState6","formdob","setDob","_useState7","_useState8","loc","setLoc","_useState9","_useState10","phone","setPhone","_useState11","_useState12","loading","_getUser","_callee2","_usr$data2","usr","_usr$data3","load","_context2","msisdn","dob","getUser","saveChanges","_ref","_response$data","response","_usr$data","_response$data2","_response$data2$data","length","displayWarning","abrupt","test","displaySuccess","userNew","LinearProgress","sx","backgroundColor","placeholder","type","value","onChange","e","target","event","inputNumber","replace","startsWith","substring","max","secondary_color","CircularProgress","size","Notifications","ntfs","Row","Col","md","span","offset","NotificationCard","notif","heading","Cancel","moment","format","CourseName","course_id","setName","getCourseName","_response$data$data","title","Transactions","transactions","corp_id","useParams","columns","field","headerName","valueGetter","params","formatCedis","parseInt","row","amount","renderCell","_params$row$items","items","_item","index","add_date","DataGrid","rows","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","changing","setChanging","changePwd","prev_password","password","disabled","Account","setCorpId","tabindex","URLSearchParams","search","get","tab","setTab","set","Number","isNaN","getData","dataLoading","setDataLoading","setTransactions","_trans$data","trans","LoadingOverLay","fluid","Tabs","newValue","Tab","label","minHeight"],"sourceRoot":""}