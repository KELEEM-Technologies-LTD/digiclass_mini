{"version":3,"file":"static/js/566.13c742db.chunk.js","mappings":"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","sources":["pages/signup_questions.tsx","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import React, {\r\n  ChangeEvent,\r\n  FormEvent,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport GeneralContext from \"../context/gen\";\r\nimport baseService from \"../core/baseServices\";\r\nimport urls from \"../core/base.url\";\r\nimport { displaySuccess, displayWarning } from \"../components/alert\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { StorageBox } from \"../core/storage\";\r\n\r\ninterface Question {\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\nexport default function SignupQuestions() {\r\n  const { theme, corpid } = useContext(GeneralContext);\r\n  const location = useLocation();\r\n  const state = location.state;\r\n  const { questions, user } = state;\r\n  const navigate = useNavigate();\r\n\r\n  const [answers, setAnswers] = useState<Question[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    let quest = [];\r\n    if (questions) {\r\n      for (const question of questions) {\r\n        const data = {\r\n          question: question.field,\r\n          answer: \"\",\r\n        };\r\n        quest.push(data);\r\n      }\r\n      setAnswers(quest);\r\n    }\r\n  }, []);\r\n\r\n  const handleAnswerChange = (\r\n    index: number,\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index].answer = event.target.value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const isAnyAnswerEmpty = answers.some((item) => item.answer.trim() === \"\");\r\n\r\n    if (isAnyAnswerEmpty) {\r\n      displayWarning(\"Please answer all questions!\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    // console.log(answers);\r\n\r\n    try {\r\n      const payload = {\r\n        questions: JSON.stringify(answers),\r\n      };\r\n      await baseService.put(urls.updateProfile + `/${user.user_id}`, payload);\r\n\r\n      const res: any = await baseService.get(\r\n        urls.get_corporate + `/${corpid}?`\r\n      );\r\n      const corp = res.data?.data;\r\n\r\n      if (!corp.verify_auth) {\r\n        setLoading(false);\r\n        navigate(`/main/${corpid}`);\r\n      } else if (user.user_state === \"pending\") {\r\n        StorageBox.clearStorage();\r\n        displaySuccess(\r\n          \"Account set up successfully! However, it will need approval. \"\r\n        );\r\n        setLoading(false);\r\n        navigate(`/sign-in/${corpid}`);\r\n      } else {\r\n        setLoading(false);\r\n        navigate(`/main/${corpid}`);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex lg:pt-12 lg:pb-8 py-8 flex-col items-center w-full justify-start min-h-screen px-4\">\r\n      <h1 className=\"lg:font-bold font-semibold mb-5 lg:text-center text-left lg:text-4xl text-xl\">\r\n        Help us serve you better.\r\n      </h1>\r\n      <div className=\"\">\r\n        <form onSubmit={handleSubmit}>\r\n          {answers.map((item, index) => (\r\n            <div key={index} className=\"flex flex-col items-start gap-y-3 my-3\">\r\n              <label\r\n                htmlFor=\"name\"\r\n                className=\"text-sm font-medium cursor-pointer\"\r\n              >\r\n                {item.question}\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                value={item.answer}\r\n                onChange={(event) => handleAnswerChange(index, event)}\r\n                className=\"w-full p-2 bg-transparent border border-gray-200 rounded-lg outline-none\"\r\n                placeholder=\"Type answer here\"\r\n              />\r\n            </div>\r\n          ))}\r\n          <button\r\n            style={{ backgroundColor: theme?.primary_color }}\r\n            type=\"submit\"\r\n            className=\"inline-flex py-2 px-4 text-white\"\r\n          >\r\n            {loading ? <Spinner /> : \"Submit\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["SignupQuestions","_useContext","useContext","GeneralContext","theme","corpid","state","useLocation","questions","user","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","answers","setAnswers","_useState3","_useState4","loading","setLoading","useEffect","quest","_step","_iterator","_createForOfIteratorHelper","s","n","done","data","question","value","field","answer","push","err","e","f","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_res$data","payload","res","wrap","_context","prev","next","preventDefault","some","item","trim","displayWarning","abrupt","JSON","stringify","baseService","urls","concat","user_id","sent","verify_auth","user_state","StorageBox","displaySuccess","t0","console","log","stop","_x","apply","arguments","_jsxs","className","children","_jsx","onSubmit","map","index","htmlFor","id","type","onChange","newAnswers","_toConsumableArray","target","handleAnswerChange","placeholder","style","backgroundColor","primary_color","Spinner","React","ref","bsPrefix","variant","_ref$animation","animation","size","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","bsSpinnerPrefix","_objectSpread","classNames","displayName"],"sourceRoot":""}