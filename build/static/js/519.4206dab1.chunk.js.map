{"version":3,"file":"static/js/519.4206dab1.chunk.js","mappings":"qPAuFA,UA9E2B,WACzB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAASH,EAAaI,IAAI,UAC1BC,EAAYL,EAAaI,IAAI,aAC3BE,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAA,EAAAA,KAAAU,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACpBnB,IAAaF,EAAM,CAAAmB,EAAAE,KAAA,SAKqB,OAJpCV,EAAc,CAClBT,UAAWA,GAGPU,EAAOU,EAAAA,EAAAA,mBAA6BH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEhBE,EAAAA,EAAAA,IACtBC,EAAAA,EAAAA,mBAAuB,IAAAC,OAAOb,EAAKc,SACnCf,GACA,KAAD,EAM8C,OATzCK,EAASG,EAAAQ,MAKfC,EAAAA,EAAAA,IAAe,0BAA0B,WACvCC,OAAOlC,SAASmC,KAAI,YAAAL,OAAetB,EAAO,SAC5C,IAEMc,EAAkB,QAAZJ,EAAGG,EAAKA,YAAI,IAAAH,GAAS,QAATC,EAATD,EAAWkB,eAAO,IAAAjB,GAAM,QAANC,EAAlBD,EAAoBE,YAAI,IAAAD,OAAf,EAATA,EAA0BE,OAAME,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGvCE,EAAAA,EAAAA,KAAiBC,EAAAA,EAAAA,UAAgB,CACrCQ,GAAIpB,EAAKqB,MACTC,QAAQ,2BACRC,KAAK,kGACJ,KAAD,GAAAhB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,wBAAAA,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAIIE,EAAAA,EAAAA,KAAiBC,EAAAA,EAAAA,SAAa,IAAAC,OAAW,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMc,SAAW,CAC1DW,QAAQ,MAADZ,OACLb,EAAK0B,WAAU,6EAAAb,OAEfR,EAAS,GAAE,uBAAAQ,OACSc,MAASC,OAC7B,gBACD,qBAAAf,OAAoBvB,KACpB,KAAD,GAAAiB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAsB,GAAAtB,EAAA,UAEFuB,QAAQC,IAAGxB,EAAAsB,IAAQ,QAAAtB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,UAGrB0B,EAAAA,EAAAA,GAAe,kCAAmC,KAAM,WACtDhB,OAAOlC,SAASmC,KAAI,YAAAL,OAAetB,EAAO,SAC5C,IACAuC,QAAQC,IAAGxB,EAAAyB,IAAQ,QAAAzB,EAAAE,KAAA,kBAGrBwB,EAAAA,EAAAA,GACE,4DACA,KACA,WACEhB,OAAOlC,SAASmC,KAAI,YAAAL,OAAetB,EAAO,SAC5C,IACA,yBAAAgB,EAAA2B,OAAA,GAAApC,EAAA,kCAEL,kBAvDsB,OAAAJ,EAAAyC,MAAA,KAAAC,UAAA,KA8DvB,OALAC,EAAAA,EAAAA,YAAU,WAER5C,GACF,GAAG,KAGD6C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2DAA0DD,UACvEF,EAAAA,EAAAA,KAACI,EAAAA,EAAgB,CAACC,MAAM,UAAUC,KAAM,GAAIC,UAAW,OAI/D,C","sources":["pages/verify-payment.tsx"],"sourcesContent":["import { useLocation, useParams } from \"react-router-dom\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { useEffect } from \"react\";\r\nimport { StorageBox } from \"../core/storage\";\r\nimport baseService from \"../core/baseServices\";\r\nimport urls from \"../core/base.url\";\r\nimport { displaySuccess, displayWarning } from \"../components/alert\";\r\nimport moment from \"moment\";\r\n\r\nconst VerifyTransactions = () => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const trxRef = searchParams.get(\"trxref\");\r\n  const reference = searchParams.get(\"reference\");\r\n  const { corp_id } = useParams();\r\n\r\n  const verifyTransaction = async () => {\r\n    if (reference && trxRef) {\r\n      const verify_data = {\r\n        reference: reference,\r\n      };\r\n      //   console.log(verify_data);\r\n      const user = StorageBox.retrieveUserData();\r\n      try {\r\n        const data: any = await baseService.put(\r\n          urls.verifyTransactions + `/${user.user_id}`,\r\n          verify_data\r\n        );\r\n\r\n        displaySuccess(\"Transaction successful\", () => {\r\n          window.location.href = `/account/${corp_id}?tab=2`;\r\n        });\r\n\r\n        const amount = data.data?.payload?.data?.amount;\r\n\r\n        try {\r\n          await baseService.post(urls.sendemail, {\r\n            to: user.email,\r\n            subject: `Course purchase complete`,\r\n            text: `Course purchase completed, the course has been successfully added to the list of your courses`,\r\n          });\r\n        } catch (error) {}\r\n\r\n        try {\r\n          await baseService.post(urls.send_sms + `/${user?.user_id}`, {\r\n            message: `Hi ${\r\n              user.first_name\r\n            }, Your course purchase  has been successfully completed. A payment of GH ${\r\n              amount / 10\r\n            } cedis was made on ${moment().format(\r\n              \"Do MMMM YYYY\"\r\n            )} TransactionId : ${reference}`,\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      } catch (error) {\r\n        displayWarning(\"Transaction verification failed\", 2000, () => {\r\n          window.location.href = `/account/${corp_id}?tab=2`;\r\n        });\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      displayWarning(\r\n        \"Transaction verification failed, transaction id not found\",\r\n        2000,\r\n        () => {\r\n          window.location.href = `/account/${corp_id}?tab=2`;\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(corp_id);\r\n    verifyTransaction();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center justify-center h-screen bg-primary-200\">\r\n        <CircularProgress color=\"primary\" size={60} thickness={5} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerifyTransactions;\r\n"],"names":["location","useLocation","searchParams","URLSearchParams","search","trxRef","get","reference","corp_id","useParams","verifyTransaction","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","verify_data","user","_data$data","_data$data$payload","_data$data$payload$da","data","amount","wrap","_context","prev","next","StorageBox","baseService","urls","concat","user_id","sent","displaySuccess","window","href","payload","to","email","subject","text","t0","message","first_name","moment","format","t1","console","log","t2","displayWarning","stop","apply","arguments","useEffect","_jsx","_Fragment","children","className","CircularProgress","color","size","thickness"],"sourceRoot":""}