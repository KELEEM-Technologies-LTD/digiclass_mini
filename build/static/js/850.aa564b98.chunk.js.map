{"version":3,"file":"static/js/850.aa564b98.chunk.js","mappings":"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","sources":["components/elements/message_badge.tsx","components/elements/notification_badge.tsx","components/elements/notification_drawer.tsx","components/navbar.tsx","pages/profile/sections/account_settings.tsx","pages/profile/sections/notifications.tsx","pages/profile/sections/getCourseNameById.tsx","pages/profile/sections/transactions.tsx","pages/profile/account.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport { StorageBox } from \"../../core/storage\";\r\nimport baseService from \"../../core/baseServices\";\r\nimport urls from \"../../core/base.url\";\r\n\r\nexport default function MessageBadge() {\r\n  const navigate = useNavigate();\r\n  const { theme, corpid } = useContext(GeneralContext);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  async function getChats() {\r\n    const user = StorageBox.retrieveUserData();\r\n    setLoading(true);\r\n    try {\r\n      const res: any = await baseService.get(\r\n        urls.chatlist + `/${user?.user_id}`\r\n      );\r\n      const chatlist = res.data?.payload;\r\n      const totalCount = chatlist.reduce(\r\n        (total: number, chat: any) => total + chat.unread_count,\r\n        0\r\n      );\r\n      setCount(totalCount);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getChats();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      onClick={() => navigate(`/messages/${corpid}`)}\r\n      className=\"position-relative  ml-4\"\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth={1.5}\r\n        stroke=\"currentColor\"\r\n        // className=\"w-6 h-6\"\r\n        style={{\r\n          height: \"30px\",\r\n          width: \"30px\",\r\n          marginRight: \"13px\",\r\n          color: \"gray\",\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z\"\r\n        />\r\n      </svg>\r\n      <span\r\n        style={{ fontSize: \"11px\", background: theme?.primary_color }}\r\n        className=\"position-absolute top-0 start-0 translate-middle rounded-circle text-white px-1\"\r\n      >\r\n        {count}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function NotificationBadge() {\r\n  const navigate = useNavigate();\r\n  const { theme, corpid, openNotification } = useContext(GeneralContext);\r\n\r\n  return (\r\n    <div\r\n      // onClick={() => navigate(`/account/${corpid}?tab=1`)}\r\n      onClick={() => openNotification()}\r\n      className=\"position-relative ml-1\"\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth={1.5}\r\n        stroke=\"currentColor\"\r\n        style={{\r\n          height: \"30px\",\r\n          width: \"30px\",\r\n          marginRight: \"13px\",\r\n          color: \"gray\",\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0\"\r\n        />\r\n      </svg>\r\n      {/* <span\r\n        style={{ fontSize: \"11px\", background: theme?.primary_color }}\r\n        className=\"position-absolute top-0 start-0 translate-middle rounded-circle text-white px-1\"\r\n      >\r\n        0\r\n      </span> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport NotificationBadge from \"./notification_badge\";\r\nimport moment from \"moment\";\r\nimport { formatTimeAgo } from \"../helpers\";\r\n\r\nexport default function NotificationDrawer(props: any) {\r\n  const { read, unread, openNotification, pop } = useContext(GeneralContext);\r\n  const [notifications, setNotifications] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    setNotifications([...read, ...unread]);\r\n    // console.log(read);\r\n  }, [read, unread]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationBadge />\r\n      {pop ? (\r\n        <div\r\n          className=\"w-full  absolute z-10 right-0 h-screen overflow-x-hidden transform translate-x-0 transition ease-in-out duration-700\"\r\n          id=\"notification\"\r\n          //   style={{\r\n          //     scrollbarWidth: \"thin\",\r\n          //     scrollbarColor: \"transparent\",\r\n          //   }}\r\n        >\r\n          <div\r\n            className=\"2xl:w-4/12 bg-gray-50 h-screen overflow-y-auto p-8 absolute right-0\"\r\n            style={{\r\n              scrollbarWidth: \"thin\",\r\n              scrollbarColor: \"transparent\",\r\n            }}\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <p className=\"text-lg font-semibold leading-6 text-gray-800\">\r\n                Notifications\r\n              </p>\r\n              <div\r\n                className=\"cursor-pointer\"\r\n                onClick={() => openNotification()}\r\n              >\r\n                <svg\r\n                  width={24}\r\n                  height={24}\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M18 6L6 18\"\r\n                    stroke=\"#4B5563\"\r\n                    strokeWidth=\"1.25\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                  <path\r\n                    d=\"M6 6L18 18\"\r\n                    stroke=\"#4B5563\"\r\n                    strokeWidth=\"1.25\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            {/* notifications */}\r\n            {notifications.map((ntf_: any, idx_: any) => (\r\n              <div\r\n                key={idx_}\r\n                className=\"w-full p-3 mt-4 bg-white rounded hover:shadow flex\"\r\n              >\r\n                <div className=\"w-8 h-8 border rounded-full border-gray-200 flex items-center justify-center\">\r\n                  <svg\r\n                    width={16}\r\n                    height={16}\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M4.30325 12.6667L1.33325 15V2.66667C1.33325 2.48986 1.40349 2.32029 1.52851 2.19526C1.65354 2.07024 1.82311 2 1.99992 2H13.9999C14.1767 2 14.3463 2.07024 14.4713 2.19526C14.5963 2.32029 14.6666 2.48986 14.6666 2.66667V12C14.6666 12.1768 14.5963 12.3464 14.4713 12.4714C14.3463 12.5964 14.1767 12.6667 13.9999 12.6667H4.30325ZM5.33325 6.66667V8H10.6666V6.66667H5.33325Z\"\r\n                      fill=\"#4338CA\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"pl-3\">\r\n                  <p className=\"text-sm leading-none\">{ntf_.message}</p>\r\n                  <p className=\"text-xs flex leading-3 pt-1 text-gray-500\">\r\n                    {/* {moment(ntf_.date).format(\"hh:mm:ss a\")} */}\r\n                    {formatTimeAgo(ntf_.date)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div className=\"flex items-center justiyf-between\">\r\n              <hr className=\"w-full\" />\r\n              <p className=\"text-sm flex flex-shrink-0 leading-normal px-3 py-16 text-gray-500\">\r\n                Thats all for now :)\r\n              </p>\r\n              <hr className=\"w-full\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { Fragment, useContext, useState } from \"react\";\r\nimport { Container, Image, Navbar, Form } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport GeneralContext from \"../context/gen\";\r\nimport { StorageBox } from \"../core/storage\";\r\nimport ChangeCurrency from \"./elements/change_currency\";\r\nimport MessageBadge from \"./elements/message_badge\";\r\nimport NotificationBadge from \"./elements/notification_badge\";\r\nimport NotificationDrawer from \"./elements/notification_drawer\";\r\n\r\nexport default function NavBar() {\r\n  const { theme, corpid } = useContext(GeneralContext);\r\n  const navigate = useNavigate();\r\n  const user: any = StorageBox.retrieveUserData();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const links = [\r\n    {\r\n      name: `My courses`,\r\n      url: `/my-courses/${corpid}`,\r\n    },\r\n    {\r\n      name: `Messages`,\r\n      url: `/messages/${corpid}`,\r\n    },\r\n    {\r\n      name: `Account`,\r\n      url: `/account/${corpid}?tab=0`,\r\n    },\r\n    // {\r\n    //   name: `Notification`,\r\n    //   url: `/account/${corpid}?tab=1`,\r\n    // },\r\n    {\r\n      name: `Transactions`,\r\n      url: `/account/${corpid}?tab=2`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          {/* <Navbar.Brand\r\n            onClick={() =>\r\n              navigate(`/main/${user ? user.corporate_id : corpid}`)\r\n            }\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <Image\r\n              src={theme?.img}\r\n              alt=\"logo\"\r\n              className=\"d-inline-block align-top me-2 lg:h-[50px] lg:w-[200px] h-[20px] w-[100px] \"\r\n              style={{ width: \"150px\", height: \"40px\", objectFit: \"cover\" }}\r\n              fluid\r\n            />\r\n          </Navbar.Brand> */}\r\n          <div\r\n            className=\"h-12 w-16 cursor-pointer\"\r\n            onClick={() =>\r\n              navigate(`/main/${user ? user.corporate_id : corpid}`)\r\n            }\r\n          >\r\n            <img src={theme?.img} alt=\"logo\" className=\"h-full w-full\" />\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <span\r\n              style={{\r\n                color: theme?.primary_color,\r\n                fontWeight: \"bolder\",\r\n                marginRight: \"10px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              {theme?.name}\r\n            </span>\r\n            <div className=\"mx-2 flex items-center justify-center\">\r\n              {/* <ChangeCurrency /> */}\r\n              <MessageBadge />\r\n              {/* <NotificationBadge /> */}\r\n              <NotificationDrawer />\r\n            </div>\r\n            <Avatar onClick={() => setOpen(true)} style={{ cursor: \"pointer\" }}>\r\n              {StorageBox.retrieveUserData()?.first_name?.[0]}\r\n              {StorageBox.retrieveUserData()?.last_name?.[0]}\r\n            </Avatar>\r\n          </div>\r\n        </Container>\r\n      </Navbar>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-10\" onClose={setOpen}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"transition ease-out duration-200\"\r\n            enterFrom=\"opacity-0 translate-y-1\"\r\n            enterTo=\"opacity-100 translate-y-0\"\r\n            leave=\"transition ease-in duration-150\"\r\n            leaveFrom=\"opacity-100 translate-y-0\"\r\n            leaveTo=\"opacity-0 translate-y-1\"\r\n          >\r\n            <div className=\"fixed inset-0 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <div className=\"fixed inset-0 overflow-hidden\">\r\n            <div className=\"absolute inset-0 overflow-hidden\">\r\n              <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10\">\r\n                <Transition.Child\r\n                  as={Fragment}\r\n                  enter=\"transition ease-out duration-200\"\r\n                  enterFrom=\"opacity-0 translate-y-1\"\r\n                  enterTo=\"opacity-100 translate-y-0\"\r\n                  leave=\"transition ease-in duration-150\"\r\n                  leaveFrom=\"opacity-100 translate-y-0\"\r\n                  leaveTo=\"opacity-0 translate-y-1\"\r\n                >\r\n                  <Dialog.Panel className=\"pointer-events-auto w-screen max-w-md pl-6 pr-6\">\r\n                    <div className=\"flex font-serif flex-col overflow-y-hidden bg-transparent px-5\">\r\n                      <div className=\"flex-1 overflow-y-auto py-6 px-4 sm:px-6\">\r\n                        <div className=\"mt-8\">\r\n                          <div className=\"bg-white rounded-5 font-serif overflow-y-hidden\">\r\n                            <div className=\"py-4 px-4\">\r\n                              <ul>\r\n                                {links.map((_d, i) => {\r\n                                  return (\r\n                                    <Fragment key={i}>\r\n                                      <li className=\"mt-2\">\r\n                                        <Link\r\n                                          to={_d?.url}\r\n                                          className={`text-decoration-none text-[${theme?.primary_color}] hover:text-[${theme?.primary_color}]`}\r\n                                        >\r\n                                          {_d.name}\r\n                                        </Link>\r\n                                      </li>\r\n                                      {i === 1 ? (\r\n                                        <hr className=\"my-1 mb-3 border-t border-secondary-400\" />\r\n                                      ) : null}\r\n                                    </Fragment>\r\n                                  );\r\n                                })}\r\n                              </ul>\r\n                            </div>\r\n                            <hr className=\"my-1 mx-5 border-t border-secondary-400\" />\r\n\r\n                            <button\r\n                              className=\"flex gap-6 px-4 mt-7 mb-5\"\r\n                              onClick={() => {\r\n                                StorageBox.clearStorage();\r\n                                window.location.href = `/sign-in/${corpid}`;\r\n                              }}\r\n                            >\r\n                              <LogoutIcon\r\n                                style={{ color: theme?.primary_color }}\r\n                              />\r\n                              <p>Logout</p>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Dialog.Panel>\r\n                </Transition.Child>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </>\r\n  );\r\n}\r\n","import { CircularProgress, LinearProgress } from \"@mui/material\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport baseService from \"../../../core/baseServices\";\r\nimport urls from \"../../../core/base.url\";\r\nimport { StorageBox } from \"../../../core/storage\";\r\nimport { displaySuccess, displayWarning } from \"../../../components/alert\";\r\nimport GeneralContext from \"../../../context/gen\";\r\n\r\nexport default function AccountSettings() {\r\n  const { corpid, setCorpId, theme } = useContext(GeneralContext);\r\n\r\n  const [fname, setFname] = useState<string>(\"\");\r\n  const [lname, setlanme] = useState<string>(\"\");\r\n  const [formdob, setDob] = useState(\"\");\r\n  const [loc, setLoc] = useState<string>(\"\");\r\n  const [phone, setPhone] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  // const [user, setUser] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  async function getUser() {\r\n    setLoading(true);\r\n    try {\r\n      const user: any = StorageBox.retrieveUserData();\r\n      const usr: any = await baseService.get(urls.getUser + `/${user.user_id}`);\r\n\r\n      if (usr?.data?.data) {\r\n        const load = usr?.data?.data;\r\n        setFname(load.first_name || \"\");\r\n        setlanme(load.last_name || \"\");\r\n        setPhone(load?.msisdn || \"\");\r\n        setLoc(load?.location || \"\");\r\n        setDob(load?.dob || \"2000-01-01\");\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const saveChanges = async () => {\r\n    if (loc.length < 1) {\r\n      displayWarning(\"Location must not be empty!\");\r\n      return;\r\n    }\r\n\r\n    if (phone.length < 10) {\r\n      displayWarning(\"Phone number must be 10 digit!\");\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      first_name: fname,\r\n      last_name: lname,\r\n      dob: formdob,\r\n      location: loc,\r\n      msisdn: phone,\r\n    };\r\n    // console.log(payload);\r\n    try {\r\n      setLoading(true);\r\n      const user: any = StorageBox.retrieveUserData();\r\n\r\n      const response: any = await baseService.put(\r\n        urls.updateProfile + `/${user.user_id}`,\r\n        payload\r\n      );\r\n\r\n      if (response?.data?.data) {\r\n        const usr: any = await baseService.get(\r\n          urls.getUser + `/${user.user_id}`\r\n        );\r\n        const load = usr?.data?.data;\r\n        setFname(load.first_name || \"\");\r\n        setlanme(load.last_name || \"\");\r\n        setPhone(load?.msisdn || \"\");\r\n        setLoc(load?.location || \"\");\r\n        setDob(load?.dob || \"2000-01-01\");\r\n        displaySuccess(response?.data?.data?.message);\r\n        // console.log(response?.data?.data);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <LinearProgress\r\n      sx={{\r\n        \"& .MuiLinearProgress-bar\": { backgroundColor: theme?.primary_color },\r\n      }}\r\n    />\r\n  ) : (\r\n    <Container className=\"mt-5\">\r\n      {/* <Row>\r\n        <Col md={5}>\r\n          <ProfilePicChange\r\n            getUserInformation={getData}\r\n            profile_pic={user?.profile_pic}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <div className=\"grid grid-cols-12\">\r\n        <div className=\"md:col-span-8 col-span-12  grid md:grid-cols-2 grid-cols-1  gap-12 my-8\">\r\n          <div className=\"\">\r\n            <p>First Name</p>\r\n            <input\r\n              placeholder=\"First name\"\r\n              type=\"text\"\r\n              name=\"fname\"\r\n              value={fname}\r\n              onChange={(e: any) => setFname(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n          <div className=\"\">\r\n            <p>Last Name</p>\r\n            <input\r\n              placeholder=\"Last name\"\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={lname}\r\n              onChange={(e: any) => setlanme(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n          <div className=\"\">\r\n            <p>Phone</p>\r\n            <input\r\n              placeholder=\"Phone number\"\r\n              type=\"tel\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              onChange={(e: any) => setPhone(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n          <div className=\"\">\r\n            <p>Location</p>\r\n            <input\r\n              placeholder=\"Location\"\r\n              type=\"text\"\r\n              name=\"loc\"\r\n              value={loc}\r\n              onChange={(e: any) => setLoc(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Date of birth</p>\r\n            <input\r\n              placeholder=\"Location\"\r\n              type=\"date\"\r\n              name=\"formdob\"\r\n              value={formdob}\r\n              onChange={(e: any) => setDob(e.target.value)}\r\n              className=\"py-2 border-primary-600 px-3 outline-none border rounded-5 w-full  flex  bg-primary-100  justify-between\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"text-right\">\r\n            <button\r\n              onClick={saveChanges}\r\n              className={`hover:bg-[${theme?.primary_color}] hover:text-[${theme?.secondary_color}] h-10 flex-col items-center flex rounded-5 border-[${theme?.primary_color}] border py-2 px-8 bg-transparent`}\r\n              //   disabled={updating}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : \"Save changes\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction InputWithIcon(props: any) {\r\n  const {\r\n    icon,\r\n    icon1,\r\n    className,\r\n    type,\r\n    error,\r\n    placeholder,\r\n    disabled,\r\n    value,\r\n    onChange,\r\n  } = props;\r\n  const ring = error ? `ring-1 ring-secondary` : \"\";\r\n  return (\r\n    <div className={` ${className} ${disabled ? \"bg-primary-200\" : \"\"} `}>\r\n      {icon1 ? (\r\n        <span className=\"flex justify-center items-center px-4\">\r\n          <img src={icon1} alt=\"e0m\" />\r\n        </span>\r\n      ) : null}\r\n      <input\r\n        data-testid=\"input\"\r\n        className={`focus:outline-none font-serif border-primary-300 px-4 bg-primary-100  ${\r\n          disabled ? \"bg-primary-200\" : \"\"\r\n        }   w-full ${ring} `}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {icon ? (\r\n        <span className=\"flex justify-center items-center px-4\">\r\n          <i className={icon}></i>\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { LinearProgress } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport GeneralContext from \"../../../context/gen\";\r\nimport { Cancel } from \"@mui/icons-material\";\r\nimport { useFetcher } from \"react-router-dom\";\r\n\r\nexport default function Notifications() {\r\n  const { read, unread, theme } = useContext(GeneralContext);\r\n  useEffect(() => {\r\n    const ntfs = {\r\n      read: read,\r\n      unread: unread,\r\n    };\r\n    console.log(ntfs);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md={{ span: 8, offset: 1 }}>\r\n          {unread.map((_d: any, i: number) => (\r\n            <NotificationCard key={i} notif={_d} theme={theme} read={false} />\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ span: 8, offset: 1 }}>\r\n          {read.map((_d: any, i: number) => (\r\n            <NotificationCard key={i} notif={_d} theme={theme} read={true} />\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction NotificationCard(props: { notif: any; theme: any; read: boolean }) {\r\n  const { notif, theme, read } = props;\r\n  const { heading, message, date } = notif;\r\n  return (\r\n    <div\r\n      className={`flex justify-between item-center md:gap-1 gap-4 border-[blue] border-b py-6 md:px-3`}\r\n    >\r\n      <div className=\"flex space-x-10\">\r\n        {read ? (\r\n          <p>read</p>\r\n        ) : (\r\n          <Cancel\r\n            className={`h-10 w-10 cursor-pointer text-[${theme?.primary_color}]`}\r\n          />\r\n        )}\r\n        <div className=\"flex-col flex\">\r\n          <p className={`font-bold text-secondary-900`}>{heading}</p>\r\n          <p>{message}</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          {moment(date).format(\"hh:mm:ss a\")} <br />\r\n          {moment(date).format(\"DD/mm/yyyy\")}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// function NtfPad(props: { notif: any; theme: any; read: boolean }) {\r\n//   const { notif, theme, read } = props;\r\n//   const { heading, message, date } = notif;\r\n\r\n//   return <div className=\"\"></div>;\r\n// }\r\n","import { useEffect, useState } from \"react\";\r\nimport baseService from \"../../../core/baseServices\";\r\nimport urls from \"../../../core/base.url\";\r\n\r\nexport default function CourseName(props: { course_id: string }) {\r\n  const { course_id } = props;\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const getCourseName = async () => {\r\n    try {\r\n      const response: any = await baseService.get(\r\n        urls.getCourses + `/${course_id}`\r\n      );\r\n      setName(response?.data?.data?.title);\r\n      setLoading(false);\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    getCourseName();\r\n  }, []);\r\n\r\n  return loading ? <></> : <p>{name}</p>;\r\n}\r\n","import { LinearProgress } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { formatCedis } from \"../../../components/helpers\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport CourseName from \"./getCourseNameById\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridRenderCellParams,\r\n  GridValueGetterParams,\r\n} from \"@mui/x-data-grid\";\r\nimport { useContext } from \"react\";\r\nimport { CurrencyContext } from \"../../../context/CurrencyContext\";\r\n\r\nexport default function Transactions(props: {\r\n  loading: boolean;\r\n  transactions: any;\r\n  theme: any;\r\n}) {\r\n  const { convertValue } = useContext(CurrencyContext);\r\n  const { loading, theme, transactions } = props;\r\n  const { corp_id } = useParams();\r\n\r\n  // console.log(transactions);\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: \"amount\",\r\n      headerName: \"Amount\",\r\n      width: 180,\r\n      valueGetter: (params: GridValueGetterParams) =>\r\n        formatCedis(parseInt(params.row.amount), \"GHS\"),\r\n    },\r\n    {\r\n      field: \"items\",\r\n      headerName: \"Course(s) purchase\",\r\n      width: 320,\r\n      renderCell: (params: GridRenderCellParams) => {\r\n        const ids = params.row.items;\r\n        return (\r\n          <ul>\r\n            {params.row.items?.map((_item: any, index: number) => (\r\n              <li className=\"mb-3 list-disc\" key={index}>\r\n                <Link to={`/my-course/${_item}/${corp_id}`}>\r\n                  <CourseName course_id={_item} />\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"reference\",\r\n      headerName: \"Transaction Ref\",\r\n      width: 200,\r\n    },\r\n    {\r\n      field: \"date\",\r\n      headerName: \"Date\",\r\n      width: 200,\r\n      valueGetter: (params: GridValueGetterParams) =>\r\n        moment(params.row.add_date).format(\"LLL\"),\r\n    },\r\n  ];\r\n\r\n  return loading ? (\r\n    <LinearProgress\r\n      sx={{\r\n        \"& .MuiLinearProgress-bar\": { backgroundColor: theme?.primary_color },\r\n      }}\r\n    />\r\n  ) : (\r\n    <div style={{ width: \"100%\" }} className=\"min-h-[50vh] w-full mt-5 p-3\">\r\n      <DataGrid\r\n        rows={transactions}\r\n        columns={columns}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: { page: 0, pageSize: 5 },\r\n          },\r\n        }}\r\n        pageSizeOptions={[5, 10, 15, 20]}\r\n        sx={{ width: \"100%\" }}\r\n        // checkboxSelection\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingOverLay from \"../../components/loader\";\r\nimport NavBar from \"../../components/navbar\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport { StorageBox } from \"../../core/storage\";\r\nimport { Tabs, styled, Tab } from \"@mui/material\";\r\nimport baseService from \"../../core/baseServices\";\r\nimport urls from \"../../core/base.url\";\r\nimport AccountSettings from \"./sections/account_settings\";\r\nimport Notifications from \"./sections/notifications\";\r\nimport Transactions from \"./sections/transactions\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function Account() {\r\n  const { loading, corpid, setCorpId, theme } = useContext(GeneralContext);\r\n\r\n  const { corp_id } = useParams();\r\n\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const tabindex = searchParams.get(\"tab\");\r\n  const [tab, setTab] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if (tabindex) {\r\n      const set: number = !Number.isNaN(parseInt(tabindex))\r\n        ? parseInt(tabindex) > 2\r\n          ? 2\r\n          : parseInt(tabindex)\r\n        : 0;\r\n      setTab(set);\r\n    }\r\n    if (StorageBox.retrieveUserData()?.corporate_id !== corp_id) {\r\n      // console.log(\"Logout and \");\r\n      StorageBox.clearStorage();\r\n      window.location.href = `/sign-in/${corp_id}`;\r\n    }\r\n    if (corpid === \"\") {\r\n      setCorpId(corp_id);\r\n    }\r\n  }, []);\r\n\r\n  const MyTabs = styled(Tabs)({\r\n    \"& .MuiTabs-indicator\": {\r\n      backgroundColor: theme?.primary_color,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const [dataLoading, setDataLoading] = useState<boolean>(true);\r\n  const [transactions, setTransactions] = useState<any>([]);\r\n\r\n  const getData = async () => {\r\n    setDataLoading(true);\r\n    try {\r\n      const user: any = StorageBox.retrieveUserData();\r\n\r\n      const trans: any = await baseService.get(\r\n        urls.transactions + `/${user.user_id}`\r\n      );\r\n      setTransactions(trans.data?.payload);\r\n      setDataLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingOverLay />\r\n  ) : (\r\n    <>\r\n      <NavBar />\r\n      <Container fluid>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={(e: any, newValue: any) => setTab(newValue)}\r\n        >\r\n          <Tab label=\"Account\" />\r\n          <Tab label=\"Notification\" />\r\n          <Tab label=\"Transactions\" />\r\n        </Tabs>\r\n      </Container>\r\n      <div style={{ minHeight: \"50vh\" }} className=\"px-5\">\r\n        {tab === 0 ? <AccountSettings /> : null}\r\n        {tab === 1 ? <Notifications /> : null}\r\n        {tab === 2 ? (\r\n          <Transactions\r\n            loading={dataLoading}\r\n            transactions={transactions}\r\n            theme={theme}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["MessageBadge","navigate","useNavigate","_useContext","useContext","GeneralContext","theme","corpid","_useState","useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","setLoading","_getChats","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","_res$data","res","chatlist","totalCount","wrap","_context","prev","next","StorageBox","baseService","urls","concat","user_id","sent","data","payload","reduce","total","chat","unread_count","t0","console","log","stop","apply","arguments","useEffect","getChats","_jsxs","onClick","className","style","cursor","children","_jsx","xmlns","fill","viewBox","strokeWidth","stroke","height","width","marginRight","color","strokeLinecap","strokeLinejoin","d","fontSize","background","primary_color","NotificationBadge","openNotification","NotificationDrawer","props","read","unread","pop","notifications","setNotifications","_toConsumableArray","id","scrollbarWidth","scrollbarColor","map","ntf_","idx_","message","formatTimeAgo","date","NavBar","_StorageBox$retrieveU","_StorageBox$retrieveU2","_StorageBox$retrieveU3","_StorageBox$retrieveU4","open","setOpen","links","name","url","_Fragment","Navbar","bg","Container","corporate_id","src","img","alt","fontWeight","marginTop","Avatar","first_name","last_name","Transition","show","as","Fragment","Dialog","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","_d","i","Link","to","window","location","href","LogoutIcon","AccountSettings","setCorpId","fname","setFname","lname","setlanme","_useState5","_useState6","formdob","setDob","_useState7","_useState8","loc","setLoc","_useState9","_useState10","phone","setPhone","_useState11","_useState12","loading","_getUser","_callee2","_usr$data2","usr","_usr$data3","load","_context2","msisdn","dob","getUser","saveChanges","_ref","_response$data","response","_usr$data","_response$data2","_response$data2$data","length","displayWarning","abrupt","displaySuccess","LinearProgress","sx","backgroundColor","placeholder","type","value","onChange","e","target","secondary_color","CircularProgress","size","Notifications","ntfs","Row","Col","md","span","offset","NotificationCard","notif","heading","Cancel","moment","format","CourseName","course_id","setName","getCourseName","_response$data$data","title","Transactions","CurrencyContext","convertValue","transactions","corp_id","useParams","columns","field","headerName","valueGetter","params","formatCedis","parseInt","row","amount","renderCell","_params$row$items","items","_item","index","add_date","DataGrid","rows","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions","Account","tabindex","URLSearchParams","search","get","tab","setTab","set","Number","isNaN","styled","Tabs","getData","dataLoading","setDataLoading","setTransactions","_trans$data","trans","LoadingOverLay","fluid","newValue","Tab","label","minHeight"],"sourceRoot":""}