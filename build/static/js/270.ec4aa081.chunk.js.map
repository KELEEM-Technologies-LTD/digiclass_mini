{"version":3,"file":"static/js/270.ec4aa081.chunk.js","mappings":"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","sources":["components/elements/message_badge.tsx","components/elements/notification_badge.tsx","components/elements/notification_drawer.tsx","components/navbar.tsx","../node_modules/@mui/icons-material/esm/ArrowRight.js","pages/my-courses.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport { StorageBox } from \"../../core/storage\";\r\nimport baseService from \"../../core/baseServices\";\r\nimport urls from \"../../core/base.url\";\r\n\r\nexport default function MessageBadge() {\r\n  const navigate = useNavigate();\r\n  const { theme, corpid } = useContext(GeneralContext);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  async function getChats() {\r\n    const user = StorageBox.retrieveUserData();\r\n    setLoading(true);\r\n    try {\r\n      const res: any = await baseService.get(\r\n        urls.unreadConvo + `/${user?.user_id}`\r\n      );\r\n      const num = res.data?.payload;\r\n      setCount(num);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getChats();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      onClick={() => navigate(`/messages/${corpid}`)}\r\n      className=\"position-relative  ml-4\"\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth={1.5}\r\n        stroke=\"currentColor\"\r\n        // className=\"w-6 h-6\"\r\n        style={{\r\n          height: \"30px\",\r\n          width: \"30px\",\r\n          marginRight: \"13px\",\r\n          color: \"gray\",\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z\"\r\n        />\r\n      </svg>\r\n      <span\r\n        style={{ fontSize: \"11px\", background: theme?.primary_color }}\r\n        className=\"position-absolute top-0 start-0 translate-middle rounded-circle text-white px-1\"\r\n      >\r\n        {count}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function NotificationBadge() {\r\n  const navigate = useNavigate();\r\n  const { theme, corpid, openNotification } = useContext(GeneralContext);\r\n\r\n  return (\r\n    <div\r\n      // onClick={() => navigate(`/account/${corpid}?tab=1`)}\r\n      onClick={() => openNotification()}\r\n      className=\"position-relative ml-1\"\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth={1.5}\r\n        stroke=\"currentColor\"\r\n        style={{\r\n          height: \"30px\",\r\n          width: \"30px\",\r\n          marginRight: \"13px\",\r\n          color: \"gray\",\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0\"\r\n        />\r\n      </svg>\r\n      {/* <span\r\n        style={{ fontSize: \"11px\", background: theme?.primary_color }}\r\n        className=\"position-absolute top-0 start-0 translate-middle rounded-circle text-white px-1\"\r\n      >\r\n        0\r\n      </span> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport GeneralContext from \"../../context/gen\";\r\nimport NotificationBadge from \"./notification_badge\";\r\nimport moment from \"moment\";\r\nimport { formatTimeAgo } from \"../helpers\";\r\n\r\nexport default function NotificationDrawer(props: any) {\r\n  const { read, unread, openNotification, pop } = useContext(GeneralContext);\r\n  const [notifications, setNotifications] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    setNotifications([...read, ...unread]);\r\n    // console.log(read);\r\n  }, [read, unread]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationBadge />\r\n      {pop ? (\r\n        <div\r\n          className=\"w-full  absolute z-10 right-0 h-screen overflow-x-hidden transform translate-x-0 transition ease-in-out duration-700\"\r\n          id=\"notification\"\r\n          //   style={{\r\n          //     scrollbarWidth: \"thin\",\r\n          //     scrollbarColor: \"transparent\",\r\n          //   }}\r\n        >\r\n          <div\r\n            className=\"2xl:w-4/12 bg-gray-50 h-screen overflow-y-auto p-8 absolute right-0\"\r\n            style={{\r\n              scrollbarWidth: \"thin\",\r\n              scrollbarColor: \"transparent\",\r\n            }}\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <p className=\"text-lg font-semibold leading-6 text-gray-800\">\r\n                Notifications\r\n              </p>\r\n              <div\r\n                className=\"cursor-pointer\"\r\n                onClick={() => openNotification()}\r\n              >\r\n                <svg\r\n                  width={24}\r\n                  height={24}\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M18 6L6 18\"\r\n                    stroke=\"#4B5563\"\r\n                    strokeWidth=\"1.25\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                  <path\r\n                    d=\"M6 6L18 18\"\r\n                    stroke=\"#4B5563\"\r\n                    strokeWidth=\"1.25\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            {/* notifications */}\r\n            {notifications.map((ntf_: any, idx_: any) => (\r\n              <div\r\n                key={idx_}\r\n                className=\"w-full p-3 mt-4 bg-white rounded hover:shadow flex\"\r\n              >\r\n                <div className=\"w-8 h-8 border rounded-full border-gray-200 flex items-center justify-center\">\r\n                  <svg\r\n                    width={16}\r\n                    height={16}\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M4.30325 12.6667L1.33325 15V2.66667C1.33325 2.48986 1.40349 2.32029 1.52851 2.19526C1.65354 2.07024 1.82311 2 1.99992 2H13.9999C14.1767 2 14.3463 2.07024 14.4713 2.19526C14.5963 2.32029 14.6666 2.48986 14.6666 2.66667V12C14.6666 12.1768 14.5963 12.3464 14.4713 12.4714C14.3463 12.5964 14.1767 12.6667 13.9999 12.6667H4.30325ZM5.33325 6.66667V8H10.6666V6.66667H5.33325Z\"\r\n                      fill=\"#4338CA\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"pl-3\">\r\n                  <p className=\"text-sm leading-none\">{ntf_.message}</p>\r\n                  <p className=\"text-xs flex leading-3 pt-1 text-gray-500\">\r\n                    {/* {moment(ntf_.date).format(\"hh:mm:ss a\")} */}\r\n                    {formatTimeAgo(ntf_.date)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div className=\"flex items-center justiyf-between\">\r\n              <hr className=\"w-full\" />\r\n              <p className=\"text-sm flex flex-shrink-0 leading-normal px-3 py-16 text-gray-500\">\r\n                Thats all for now :)\r\n              </p>\r\n              <hr className=\"w-full\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { Fragment, useContext, useState } from \"react\";\r\nimport { Container, Image, Navbar, Form } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport GeneralContext from \"../context/gen\";\r\nimport { StorageBox } from \"../core/storage\";\r\nimport ChangeCurrency from \"./elements/change_currency\";\r\nimport MessageBadge from \"./elements/message_badge\";\r\nimport NotificationBadge from \"./elements/notification_badge\";\r\nimport NotificationDrawer from \"./elements/notification_drawer\";\r\n\r\nexport default function NavBar() {\r\n  const { theme, corpid } = useContext(GeneralContext);\r\n  const navigate = useNavigate();\r\n  const user: any = StorageBox.retrieveUserData();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const links = [\r\n    {\r\n      name: `My courses`,\r\n      url: `/my-courses/${corpid}`,\r\n    },\r\n    {\r\n      name: `Messages`,\r\n      url: `/messages/${corpid}`,\r\n    },\r\n    {\r\n      name: `Account`,\r\n      url: `/account/${corpid}?tab=0`,\r\n    },\r\n    // {\r\n    //   name: `Notification`,\r\n    //   url: `/account/${corpid}?tab=1`,\r\n    // },\r\n    {\r\n      name: `Transactions`,\r\n      url: `/account/${corpid}?tab=2`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          {/* <Navbar.Brand\r\n            onClick={() =>\r\n              navigate(`/main/${user ? user.corporate_id : corpid}`)\r\n            }\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <Image\r\n              src={theme?.img}\r\n              alt=\"logo\"\r\n              className=\"d-inline-block align-top me-2 lg:h-[50px] lg:w-[200px] h-[20px] w-[100px] \"\r\n              style={{ width: \"150px\", height: \"40px\", objectFit: \"cover\" }}\r\n              fluid\r\n            />\r\n          </Navbar.Brand> */}\r\n          <div\r\n            className=\"h-12 w-16 cursor-pointer\"\r\n            onClick={() =>\r\n              navigate(`/main/${user ? user.corporate_id : corpid}`)\r\n            }\r\n          >\r\n            <img\r\n              src={theme?.img ?? `/logo.png`}\r\n              alt=\"logo\"\r\n              className=\"h-full w-full\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <span\r\n              style={{\r\n                color: theme?.primary_color,\r\n                fontWeight: \"bolder\",\r\n                marginRight: \"10px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              {theme?.name}\r\n            </span>\r\n            <div className=\"mx-2 flex items-center justify-center\">\r\n              {/* <ChangeCurrency /> */}\r\n              <MessageBadge />\r\n              {/* <NotificationBadge /> */}\r\n              <NotificationDrawer />\r\n            </div>\r\n            <Avatar onClick={() => setOpen(true)} style={{ cursor: \"pointer\" }}>\r\n              {StorageBox.retrieveUserData()?.first_name?.[0]}\r\n              {StorageBox.retrieveUserData()?.last_name?.[0]}\r\n            </Avatar>\r\n          </div>\r\n        </Container>\r\n      </Navbar>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-10\" onClose={setOpen}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"transition ease-out duration-200\"\r\n            enterFrom=\"opacity-0 translate-y-1\"\r\n            enterTo=\"opacity-100 translate-y-0\"\r\n            leave=\"transition ease-in duration-150\"\r\n            leaveFrom=\"opacity-100 translate-y-0\"\r\n            leaveTo=\"opacity-0 translate-y-1\"\r\n          >\r\n            <div className=\"fixed inset-0 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <div className=\"fixed inset-0 overflow-hidden\">\r\n            <div className=\"absolute inset-0 overflow-hidden\">\r\n              <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10\">\r\n                <Transition.Child\r\n                  as={Fragment}\r\n                  enter=\"transition ease-out duration-200\"\r\n                  enterFrom=\"opacity-0 translate-y-1\"\r\n                  enterTo=\"opacity-100 translate-y-0\"\r\n                  leave=\"transition ease-in duration-150\"\r\n                  leaveFrom=\"opacity-100 translate-y-0\"\r\n                  leaveTo=\"opacity-0 translate-y-1\"\r\n                >\r\n                  <Dialog.Panel className=\"pointer-events-auto w-screen max-w-md pl-6 pr-6\">\r\n                    <div className=\"flex font-serif flex-col overflow-y-hidden bg-transparent px-5\">\r\n                      <div className=\"flex-1 overflow-y-auto py-6 px-4 sm:px-6\">\r\n                        <div className=\"mt-8\">\r\n                          <div className=\"bg-white rounded-5 font-serif overflow-y-hidden\">\r\n                            <div className=\"py-4 px-4\">\r\n                              <ul>\r\n                                {links.map((_d, i) => {\r\n                                  return (\r\n                                    <Fragment key={i}>\r\n                                      <li className=\"mt-2\">\r\n                                        <Link\r\n                                          to={_d?.url}\r\n                                          className={`text-decoration-none text-[${theme?.primary_color}] hover:text-[${theme?.primary_color}]`}\r\n                                        >\r\n                                          {_d.name}\r\n                                        </Link>\r\n                                      </li>\r\n                                      {i === 1 ? (\r\n                                        <hr className=\"my-1 mb-3 border-t border-secondary-400\" />\r\n                                      ) : null}\r\n                                    </Fragment>\r\n                                  );\r\n                                })}\r\n                              </ul>\r\n                            </div>\r\n                            <hr className=\"my-1 mx-5 border-t border-secondary-400\" />\r\n\r\n                            <button\r\n                              className=\"flex gap-6 px-4 mt-7 mb-5\"\r\n                              onClick={() => {\r\n                                StorageBox.clearStorage();\r\n                                window.location.href = `/sign-in/${corpid}`;\r\n                              }}\r\n                            >\r\n                              <LogoutIcon\r\n                                style={{ color: theme?.primary_color }}\r\n                              />\r\n                              <p>Logout</p>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Dialog.Panel>\r\n                </Transition.Child>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </>\r\n  );\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m10 17 5-5-5-5v10z\"\n}), 'ArrowRight');","import React, { useContext, useEffect, useState } from \"react\";\r\nimport GeneralContext from \"../context/gen\";\r\nimport LoadingOverLay from \"../components/loader\";\r\nimport NavBar from \"../components/navbar\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { StorageBox } from \"../core/storage\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { ArrowRight } from \"@mui/icons-material\";\r\nimport baseService from \"../core/baseServices\";\r\nimport urls from \"../core/base.url\";\r\n\r\nexport default function MyCourse() {\r\n  const { loading, theme, corpid, setCorpId, myCourseLoading, myCourse } =\r\n    useContext(GeneralContext);\r\n\r\n  const { corp_id } = useParams();\r\n  useEffect(() => {\r\n    if (StorageBox.retrieveUserData()?.corporate_id !== corp_id) {\r\n      // console.log(\"Logout and \");\r\n      StorageBox.clearStorage();\r\n      window.location.href = `/sign-in/${corp_id}`;\r\n    }\r\n    if (corpid === \"\") {\r\n      setCorpId(corp_id);\r\n    }\r\n  }, []);\r\n\r\n  const styles = {\r\n    root: {\r\n      padding: 16,\r\n    },\r\n    title: {\r\n      fontSize: 32,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 24,\r\n    },\r\n    courseCard: {\r\n      cursor: \"pointer\",\r\n      transition: \"transform 0.3s ease-in-out\",\r\n      \"&:hover\": {\r\n        transform: \"translateY(-2px)\",\r\n      },\r\n    },\r\n    courseCardContent: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      height: \"100%\",\r\n    },\r\n    courseImage: {\r\n      marginBottom: 16,\r\n    },\r\n    courseTitle: {\r\n      fontSize: 24,\r\n      fontWeight: \"bold\",\r\n    },\r\n    courseInstructor: {\r\n      color: \"#6B7280\",\r\n    },\r\n    courseDescription: {\r\n      marginTop: \"auto\",\r\n    },\r\n    courseButton: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 16,\r\n      backgroundColor: \"#3B82F6\",\r\n      color: \"#FFFFFF\",\r\n      borderRadius: 4,\r\n      padding: \"8px 16px\",\r\n      transition: \"background-color 0.3s ease-in-out\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#2563EB\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingOverLay />\r\n  ) : (\r\n    <>\r\n      <NavBar />\r\n      {myCourseLoading ? (\r\n        <LinearProgress\r\n          sx={{\r\n            \"& .MuiLinearProgress-bar\": {\r\n              backgroundColor: theme?.primary_color,\r\n            },\r\n          }}\r\n        />\r\n      ) : (\r\n        <Container fluid>\r\n          <div className=\"flex flex-col font-serif\">\r\n            {/* main content */}\r\n            <div className=\"mt-12 md:px-16 px-3\">\r\n              <div style={styles.root}>\r\n                <Typography style={styles.title}>My Courses</Typography>\r\n                <Grid container spacing={4}>\r\n                  {myCourse.length === 0 ? (\r\n                    <>\r\n                      <Grid item md={12}>\r\n                        <Typography\r\n                          style={styles.courseTitle}\r\n                          className=\"text-center\"\r\n                        >\r\n                          You have not purchased any course from DigiClass\r\n                        </Typography>\r\n                      </Grid>\r\n                    </>\r\n                  ) : (\r\n                    myCourse.map((course: any, index: number) => (\r\n                      <Grid item xs={12} sm={6} md={4} key={index}>\r\n                        <PaidCourseCard course={course} corp_id={corp_id} />\r\n                      </Grid>\r\n                    ))\r\n                  )}\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PaidCourseCard = (props: { course: any; corp_id: any }) => {\r\n  const { course, corp_id } = props;\r\n  const navigate = useNavigate();\r\n  const [completed, setCompleted] = useState<number>(0);\r\n  const [total, setTotal] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    // console.log(course);\r\n    getCourseSections();\r\n    getCourseProgress();\r\n  }, []);\r\n\r\n  const getCourseSections = async () => {\r\n    const course_id = course.course_id;\r\n    const user: any = StorageBox.retrieveUserData();\r\n    try {\r\n      const res: any = await baseService.get(\r\n        urls.getCourses + `/${course_id}/users/${user.user_id}`\r\n      );\r\n\r\n      // console.log(res.data?.data?.sections?.length);\r\n      setTotal(res.data?.data?.sections?.length);\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCourseProgress = async () => {\r\n    const user: any = StorageBox.retrieveUserData();\r\n    const course_id = course.course_id;\r\n    const user_id = user.user_id;\r\n\r\n    try {\r\n      const res: any = await baseService.get(\r\n        urls.getAllCompletedSections + `/${user_id}/${course_id}`\r\n      );\r\n      // console.log(res.data.payload?.length);\r\n      setCompleted(res.data?.payload?.length);\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  const styles = {\r\n    root: {\r\n      padding: 16,\r\n    },\r\n    title: {\r\n      fontSize: 32,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 24,\r\n    },\r\n    courseCard: {\r\n      cursor: \"pointer\",\r\n      transition: \"transform 0.3s ease-in-out\",\r\n      // maxHeight: \"520px\",\r\n      minHeight: \"520px\",\r\n      \"&:hover\": {\r\n        transform: \"translateY(-2px)\",\r\n      },\r\n    },\r\n    courseCardContent: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n      minHeight: \"520px\",\r\n    },\r\n    courseImage: {\r\n      marginBottom: 16,\r\n    },\r\n    courseTitle: {\r\n      fontSize: 18,\r\n      fontWeight: \"bold\",\r\n    },\r\n    courseInstructor: {\r\n      color: \"#6B7280\",\r\n    },\r\n    courseDescription: {\r\n      marginTop: \"auto\",\r\n    },\r\n    courseButton: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 16,\r\n      backgroundColor: \"#3B82F6\",\r\n      color: \"#FFFFFF\",\r\n      borderRadius: 4,\r\n      padding: \"8px 16px\",\r\n      transition: \"background-color 0.3s ease-in-out\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#2563EB\",\r\n      },\r\n    },\r\n  };\r\n\r\n  // console.log(course);\r\n  return (\r\n    <Card style={styles.courseCard} onClick={() => {}}>\r\n      <CardContent\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n          minHeight: \"520px\",\r\n        }}\r\n      >\r\n        <img\r\n          src={course.thumbnail}\r\n          alt={course.title}\r\n          style={styles.courseImage}\r\n        />\r\n        <Typography style={styles.courseTitle}>{course.title}</Typography>\r\n        <Typography style={styles.courseInstructor}>\r\n          {/* Instructor: <InstructorName instructor={course.instructor} /> <br /> */}\r\n          Language: {course.language} <br />\r\n          Skill Level: {course.skill_level}\r\n        </Typography>\r\n        {/* {completed} / {total} */}\r\n        <ProgressBar total={total} completed={completed} />\r\n        <Typography style={styles.courseDescription}>\r\n          {course.short_description}\r\n        </Typography>\r\n        <div\r\n          className=\"mt-auto\"\r\n          style={styles.courseButton}\r\n          onClick={() => navigate(`/my-course/${course.course_id}/${corp_id}`)}\r\n        >\r\n          View Course <ArrowRight />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ProgressBar = (props: { total: number; completed: number }) => {\r\n  const { total, completed } = props;\r\n  const percentage: number = Math.floor((completed / total) * 100);\r\n  const { theme } = useContext(GeneralContext);\r\n\r\n  return (\r\n    <div className=\"relative mt-2 pt-1\">\r\n      <div\r\n        className={`overflow-hidden h-2 mb-1 text-xs flex rounded bg-[${theme?.primary_color}]`}\r\n      >\r\n        <div\r\n          style={{ width: `${percentage ? percentage : 0}%` }}\r\n          className={`shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-[${theme?.primary_color}]`}\r\n        />\r\n      </div>\r\n      <div className=\"flex mb-2 items-center justify-between\">\r\n        <div>\r\n          <span\r\n            className={`text-xs font-semibold inline-block py-1 px-2 uppercase rounded text-primary-600 bg-[${theme?.primary_color}]`}\r\n          >\r\n            Progress\r\n          </span>\r\n        </div>\r\n        <div\r\n          className={`text-xs font-semibold inline-block text-[${theme?.primary_color}]`}\r\n        >\r\n          {percentage ? percentage : 0}%\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["MessageBadge","navigate","useNavigate","_useContext","useContext","GeneralContext","theme","corpid","_useState","useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","setLoading","_getChats","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","_res$data","res","num","wrap","_context","prev","next","StorageBox","baseService","urls","concat","user_id","sent","data","payload","t0","console","log","stop","apply","arguments","useEffect","getChats","_jsxs","onClick","className","style","cursor","children","_jsx","xmlns","fill","viewBox","strokeWidth","stroke","height","width","marginRight","color","strokeLinecap","strokeLinejoin","d","fontSize","background","primary_color","NotificationBadge","openNotification","NotificationDrawer","props","read","unread","pop","notifications","setNotifications","_toConsumableArray","id","scrollbarWidth","scrollbarColor","map","ntf_","idx_","message","formatTimeAgo","date","NavBar","_theme$img","_StorageBox$retrieveU","_StorageBox$retrieveU2","_StorageBox$retrieveU3","_StorageBox$retrieveU4","open","setOpen","links","name","url","_Fragment","Navbar","bg","Container","corporate_id","src","img","alt","fontWeight","marginTop","Avatar","first_name","last_name","Transition","show","as","Fragment","Dialog","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","_d","i","Link","to","window","location","href","LogoutIcon","createSvgIcon","MyCourse","loading","setCorpId","myCourseLoading","myCourse","corp_id","useParams","styles","root","padding","title","marginBottom","courseCard","transition","transform","courseCardContent","display","flexDirection","courseImage","courseTitle","courseInstructor","courseDescription","courseButton","alignItems","justifyContent","backgroundColor","borderRadius","LoadingOverLay","LinearProgress","sx","fluid","Typography","Grid","container","spacing","length","item","md","course","index","xs","sm","PaidCourseCard","completed","setCompleted","total","setTotal","getCourseSections","getCourseProgress","_ref","course_id","_res$data$data","_res$data$data$sectio","sections","_ref2","_callee2","_res$data2","_res$data2$payload","_context2","minHeight","Card","CardContent","thumbnail","language","skill_level","ProgressBar","short_description","ArrowRight","percentage","Math","floor"],"sourceRoot":""}